public final class dev/jombi/kordsb/core/ClientResources {
	public fun <init> (Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)V
	public final fun getDefaultStrategy ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	public final fun getToken ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/Kord : kotlinx/coroutines/CoroutineScope {
	public static final field Companion Ldev/jombi/kordsb/core/Kord$Companion;
	public fun <init> (Ldev/jombi/kordsb/core/ClientResources;Ldev/kord/cache/api/DataCache;Ldev/jombi/kordsb/core/gateway/MasterGateway;Ldev/jombi/kordsb/rest/service/RestClient;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/CoroutineDispatcher;Ldev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor;)V
	public final fun createGuild (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun createGuild (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun editPresence (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun editSelf (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCache ()Ldev/kord/cache/api/DataCache;
	public final fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getChannel$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDefaultSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public final fun getGateway ()Ldev/jombi/kordsb/core/gateway/MasterGateway;
	public final fun getGuild (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuild$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuildPreview (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildPreview$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuildPreviewOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildPreviewOrNull$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public final fun getInvite (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInvite$default (Ldev/jombi/kordsb/core/Kord;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getInviteOrNull (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInviteOrNull$default (Ldev/jombi/kordsb/core/Kord;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getNitroStickerPacks ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public final fun getResources ()Ldev/jombi/kordsb/core/ClientResources;
	public final fun getRest ()Ldev/jombi/kordsb/rest/service/RestClient;
	public final fun getSelf (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getSelf$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getSelfId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUnsafe ()Ldev/jombi/kordsb/core/Unsafe;
	public final fun getUser (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getUser$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhook (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhook$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookOrNull$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookWithToken (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookWithToken$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookWithTokenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookWithTokenOrNull$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun login (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun login$default (Ldev/jombi/kordsb/core/Kord;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun logout (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun proxy (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/Kord;
	public static synthetic fun proxy$default (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/Kord;
	public final fun shutdown (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public final fun with (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/supplier/EntitySupplier;
}

public final class dev/jombi/kordsb/core/Kord$Companion {
	public final fun restOnly (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/Kord;
	public static synthetic fun restOnly$default (Ldev/jombi/kordsb/core/Kord$Companion;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/KordKt {
	public static final fun Kord (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun Kord$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun getKORD_TEMP_TOKEN_STORE ()Ljava/lang/String;
	public static final fun getKordLogger ()Lmu/KLogger;
	public static final fun setKORD_TEMP_TOKEN_STORE (Ljava/lang/String;)V
}

public abstract interface class dev/jombi/kordsb/core/KordObject {
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/Unsafe {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;)V
	public final fun applicationCommandInteraction (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public final fun categorizableChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public final fun channel (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public final fun componentInteraction (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public static synthetic fun componentInteraction$default (Ldev/jombi/kordsb/core/Unsafe;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public final fun globalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;
	public final fun globalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;
	public final fun globalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;
	public static synthetic fun globalApplicationCommand$default (Ldev/jombi/kordsb/core/Unsafe;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;
	public final fun guild (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun guildApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;
	public static synthetic fun guildApplicationCommand$default (Ldev/jombi/kordsb/core/Unsafe;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;
	public final fun guildChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public final fun guildEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;
	public final fun guildMessageChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun guildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;
	public final fun member (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun message (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun messageChannel (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun newsChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
	public final fun privateThreadParent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;
	public final fun publicThreadParent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public final fun role (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public final fun stageInstance (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;
	public final fun storeChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
	public final fun textChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
	public final fun thread (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;
	public final fun threadMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;
	public fun toString ()Ljava/lang/String;
	public final fun topGuildChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public final fun topGuildMessageChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public final fun user (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun voiceChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
	public final fun webhook (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/behavior/WebhookBehavior;
}

public final class dev/jombi/kordsb/core/UtilKt {
	public static final fun any (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun enableEvent (Ldev/jombi/kordsb/gateway/Intents$IntentsBuilder;Lkotlin/reflect/KClass;)V
	public static final fun enableEvents (Ldev/jombi/kordsb/gateway/Intents$IntentsBuilder;Ljava/lang/Iterable;)V
	public static final fun enableEvents (Ldev/jombi/kordsb/gateway/Intents$IntentsBuilder;[Lkotlin/reflect/KClass;)V
	public static final fun firstOrNull (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sorted (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior : dev/jombi/kordsb/core/entity/Entity {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
}

public final class dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/ApplicationCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public abstract interface class dev/jombi/kordsb/core/behavior/ChatInputCommandBehavior : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/ChatInputCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/ChatInputCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public abstract interface class dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehaviorKt {
	public static final fun GlobalApplicationCommandBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior;
	public static final fun GuildApplicationCommandBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior : dev/jombi/kordsb/core/behavior/ChatInputCommandBehavior, dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior : dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior, dev/jombi/kordsb/core/behavior/MessageCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior : dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior, dev/jombi/kordsb/core/behavior/UserCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun createSticker (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/rest/NamedFile;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editMFALevel (Ldev/jombi/kordsb/common/entity/MFALevel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editSelfNickname (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editWelcomeScreen (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getBan (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBans ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getCachedThreads ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getEmojis ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getIntegrations ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getInvite (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInviteOrNull (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMembers (Ljava/lang/String;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPresences ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPreview (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPreviewOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPruneCount (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStickers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplates ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getVanityUrl (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getWelcomeScreen (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWelcomeScreenOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWidget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWidgetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun kick (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun modifySelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun prune (ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun unban (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
}

public final class dev/jombi/kordsb/core/behavior/GuildBehavior$DefaultImpls {
	public static fun asGuild (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asGuildOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createSticker (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/rest/NamedFile;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun editMFALevel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/MFALevel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun editSelfNickname (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun editSelfNickname$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun editWelcomeScreen (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchGuild (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchGuildOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getBan (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getBanOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getBans (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getCachedThreads (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannels (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getEmojis (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildScheduledEvent (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getIntegrations (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getInvite (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInvite$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getInviteOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInviteOrNull$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMember (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMemberOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMembers (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMembers (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;I)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMembers$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPresences (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPreview (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPreviewOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPruneCount (Ldev/jombi/kordsb/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getPruneCount$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getRegions (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRole (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRoleOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRoles (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getSticker (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStickerOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStickers (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getTemplate (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplateOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplates (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getVanityUrl (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWelcomeScreen (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWelcomeScreenOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWidget (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWidgetOrNull (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun kick (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun kick$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun leave (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun modifySelfNickname (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun modifySelfNickname$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun prune (Ldev/jombi/kordsb/core/behavior/GuildBehavior;ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun prune$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;ILjava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun unban (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun unban$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
}

public final class dev/jombi/kordsb/core/behavior/GuildBehaviorKt {
	public static final fun GuildBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static synthetic fun GuildBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static final synthetic fun addRole (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun addRole$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun ban (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createCategory (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createCategory (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createCategory$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createEmoji (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ldev/jombi/kordsb/rest/Image;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createEmoji (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createEmoji$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ldev/jombi/kordsb/rest/Image;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createNewsChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createNewsChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createNewsChannel$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createRole (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createRole$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createScheduledEvent (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createTextChannel$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createVoiceChannel$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editWidget (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getAuditLogEntries (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getAuditLogEntries$default (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun swapChannelPositions (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun swapRolePositions (Ldev/jombi/kordsb/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior : dev/jombi/kordsb/core/behavior/ChatInputCommandBehavior, dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildEmojiBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;
}

public final class dev/jombi/kordsb/core/behavior/GuildEmojiBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;
}

public final class dev/jombi/kordsb/core/behavior/GuildEmojiBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/GuildEmojiBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior : dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior, dev/jombi/kordsb/core/behavior/MessageCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asGuildScheduledEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asGuildScheduledEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchGuildScheduledEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchGuildScheduledEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUsers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
}

public final class dev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior$DefaultImpls {
	public static fun asGuildScheduledEvent (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asGuildScheduledEventOrNull (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchGuildScheduledEvent (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchGuildScheduledEventOrNull (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMembers (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMembersAfter (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMembersAfter$default (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMembersBefore (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMembersBefore$default (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getUsers (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getUsersAfter (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getUsersAfter$default (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getUsersBefore (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getUsersBefore$default (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class dev/jombi/kordsb/core/behavior/GuildScheduledEventBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/GuildUserCommandBehavior : dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior, dev/jombi/kordsb/core/behavior/UserCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/GuildUserCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/GuildUserCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/GuildUserCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/jombi/kordsb/core/behavior/GuildUserCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/MemberBehavior : dev/jombi/kordsb/core/behavior/UserBehavior, dev/jombi/kordsb/core/entity/KordEntity {
	public abstract fun addRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getNicknameMention ()Ljava/lang/String;
	public abstract fun getPresence (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPresenceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceStateOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun kick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun removeRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
}

public final class dev/jombi/kordsb/core/behavior/MemberBehavior$DefaultImpls {
	public static fun addRole (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun addRole$default (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun asMember (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMember (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUser (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUserOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun fetchMember (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMember (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMemberOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMemberOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUser (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUserOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannel (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannelOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/MemberBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/MemberBehavior;)Ljava/lang/String;
	public static fun getNicknameMention (Ldev/jombi/kordsb/core/behavior/MemberBehavior;)Ljava/lang/String;
	public static fun getPresence (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPresenceOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceState (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStateOrNull (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun kick (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun kick$default (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun removeRole (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeRole$default (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
}

public final class dev/jombi/kordsb/core/behavior/MemberBehaviorKt {
	public static final fun MemberBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public static synthetic fun MemberBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public static final fun ban (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun ban$default (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/MessageBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun addReaction (Ldev/jombi/kordsb/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun addReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteAllReactions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteOwnReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteReaction (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getReactors (Ldev/jombi/kordsb/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun pin (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun publish (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun unpin (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/MessageBehavior$DefaultImpls {
	public static fun addReaction (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun addReaction (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMessage (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMessageOrNull (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun deleteAllReactions (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteOwnReaction (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteReaction (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteReaction (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMessage (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMessageOrNull (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/MessageBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getReactors (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public static fun pin (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun pin$default (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun publish (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun unpin (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun unpin$default (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/MessageBehaviorKt {
	public static final fun MessageBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static synthetic fun MessageBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun edit$default (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final synthetic fun editWebhookMessage (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun reply (Ldev/jombi/kordsb/core/behavior/MessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/MessageCommandBehavior : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/MessageCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/MessageCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public abstract interface class dev/jombi/kordsb/core/behavior/RoleBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun changePosition (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
}

public final class dev/jombi/kordsb/core/behavior/RoleBehavior$DefaultImpls {
	public static fun asRole (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asRoleOrNull (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun changePosition (Ldev/jombi/kordsb/core/behavior/RoleBehavior;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun fetchRole (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchRoleOrNull (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/RoleBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/RoleBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
}

public final class dev/jombi/kordsb/core/behavior/RoleBehaviorKt {
	public static final fun RoleBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public static synthetic fun RoleBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/RoleBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/StageInstanceBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun update (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;
}

public final class dev/jombi/kordsb/core/behavior/StageInstanceBehavior$DefaultImpls {
	public static fun asStageInstance (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asStageInstanceOrNull (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun fetchStageInstance (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchStageInstanceOrNull (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun update (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;
}

public final class dev/jombi/kordsb/core/behavior/StageInstanceBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/StickerBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asSticker (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asStickerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchSticker (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchStickerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/behavior/StickerBehavior$DefaultImpls {
	public static fun asSticker (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asStickerOrNull (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchSticker (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchStickerOrNull (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/StickerBehaviorKt {
	public static final fun StickerBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/StickerBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/StickerBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/TemplateBehavior : dev/jombi/kordsb/core/KordObject {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getCode ()Ljava/lang/String;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/TemplateBehavior$DefaultImpls {
	public static fun delete (Ldev/jombi/kordsb/core/behavior/TemplateBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun sync (Ldev/jombi/kordsb/core/behavior/TemplateBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/TemplateBehaviorKt {
	public static final fun TemplateBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/behavior/TemplateBehavior;
	public static final fun createGuild (Ldev/jombi/kordsb/core/behavior/TemplateBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/TemplateBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/ThreadMemberBehavior : dev/jombi/kordsb/core/behavior/UserBehavior {
	public abstract fun getThread (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getThreadId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getThreadOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
}

public final class dev/jombi/kordsb/core/behavior/ThreadMemberBehavior$DefaultImpls {
	public static fun asMember (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUser (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUserOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun fetchMember (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMemberOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUser (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUserOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannel (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannelOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;)Ljava/lang/String;
	public static fun getThread (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getThreadOrNull (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
}

public final class dev/jombi/kordsb/core/behavior/ThreadMemberBehaviorKt {
	public static final fun ThreadMemberBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;
	public static synthetic fun ThreadMemberBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/ThreadMemberBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/UserBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getDmChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getDmChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
}

public final class dev/jombi/kordsb/core/behavior/UserBehavior$DefaultImpls {
	public static fun asMember (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUser (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUserOrNull (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun fetchMember (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchMemberOrNull (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUser (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchUserOrNull (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannel (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannelOrNull (Ldev/jombi/kordsb/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/UserBehavior;)Ljava/lang/String;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/UserBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
}

public final class dev/jombi/kordsb/core/behavior/UserBehaviorKt {
	public static final fun UserBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public static synthetic fun UserBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/UserCommandBehavior : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/UserCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/UserCommandBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public abstract interface class dev/jombi/kordsb/core/behavior/WebhookBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun delete (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteMessage (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessage (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessageOrNull (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/WebhookBehavior;
}

public final class dev/jombi/kordsb/core/behavior/WebhookBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun deleteMessage$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getMessage$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getMessageOrNull$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/WebhookBehavior;
}

public final class dev/jombi/kordsb/core/behavior/WebhookBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun execute (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun execute$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun executeIgnored (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun executeIgnored$default (Ldev/jombi/kordsb/core/behavior/WebhookBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior : dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior {
	public abstract fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
}

public final class dev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior : dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehaviorKt {
	public static final fun createInvite (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createInvite$default (Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/CategoryBehavior : dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/CategoryBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannels (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/CategoryBehaviorKt {
	public static final fun CategoryBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public static synthetic fun CategoryBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public static final fun createNewsChannel (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createNewsChannel$default (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createTextChannel$default (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createVoiceChannel$default (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/ChannelBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/ChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;)Ljava/lang/String;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/ChannelBehaviorKt {
	public static final fun ChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public static synthetic fun ChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior : dev/jombi/kordsb/core/behavior/channel/ChannelBehavior, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;)Ljava/lang/String;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/GuildChannelBehaviorKt {
	public static final fun GuildChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public static synthetic fun GuildChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior : dev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior, dev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun bulkDelete$default (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior : dev/jombi/kordsb/core/behavior/channel/ChannelBehavior, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun deleteMessage$default (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAfter$default (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAround$default (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesBefore$default (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/MessageChannelBehaviorKt {
	public static final fun MessageChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static synthetic fun MessageChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static final fun createEmbed (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withTyping (Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior : dev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun follow (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPublicArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun startPublicThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startPublicThreadWithMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun follow (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPublicArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun startPublicThread (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startPublicThread$default (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun startPublicThreadWithMessage (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startPublicThreadWithMessage$default (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/NewsChannelBehaviorKt {
	public static final fun NewsChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
	public static synthetic fun NewsChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/StageChannelBehavior : dev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior {
	public abstract synthetic fun createStageInstance (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/StageChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static synthetic fun createStageInstance (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstance (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstanceOrNull (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/StageChannelBehaviorKt {
	public static final fun StageChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;
	public static synthetic fun StageChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;
	public static final fun createStageInstance (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createStageInstance$default (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editCurrentVoiceState (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editVoiceState (Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior : dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/StoreChannelBehaviorKt {
	public static final fun StoreChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
	public static synthetic fun StoreChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/TextChannelBehavior : dev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPrivateArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPublicArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun startPrivateThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startPublicThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startPublicThreadWithMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TextChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPrivateArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPublicArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun startPrivateThread (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startPrivateThread$default (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun startPublicThread (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startPublicThread$default (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun startPublicThreadWithMessage (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startPublicThreadWithMessage$default (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TextChannelBehaviorKt {
	public static final fun TextChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
	public static synthetic fun TextChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior : dev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior {
	public abstract fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun addOverwrite$default (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehaviorKt {
	public static final fun editMemberPermission (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editRolePermission (Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior : dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior, dev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehaviorKt {
	public static final fun createWebhook (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createWebhook$default (Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior : dev/jombi/kordsb/core/behavior/channel/BaseVoiceChannelBehavior, dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/VoiceChannelBehaviorKt {
	public static final fun VoiceChannelBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
	public static synthetic fun VoiceChannelBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior : dev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior {
	public abstract fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPrivateArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
}

public final class dev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getJoinedPrivateArchivedThreads$default (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPrivateArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getPrivateArchivedThreads$default (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPublicArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/PrivateThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior : dev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior {
	public abstract fun addUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getParent ()Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public abstract fun getParent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getParentId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getParentOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun join (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun removeUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior$DefaultImpls {
	public static fun addUser (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMembers (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getParent (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public static fun getParent (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getParentOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun join (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun leave (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun removeUser (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior : dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPublicArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
}

public final class dev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPublicArchivedThreads (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getPublicArchivedThreads$default (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior {
	public abstract synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehaviorKt {
	public static final fun ActionInteractionBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public static synthetic fun ActionInteractionBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public static final fun respondEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondPublic (Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehaviorKt {
	public static final fun suggestInt (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun suggestNumber (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun suggestString (Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior {
	public abstract fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehaviorKt {
	public static final fun ComponentInteractionBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public static synthetic fun ComponentInteractionBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public static final fun acknowledgeEphemeralUpdateMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun acknowledgePublicUpdateMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun updateEphemeralMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun updatePublicMessage (Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildBehavior (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehaviorKt {
	public static final fun GuildInteractionBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public static synthetic fun GuildInteractionBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getToken ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior : dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehaviorKt {
	public static final fun modal (Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior : dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehaviorKt {
	public static final fun EphemeralFollowupMessageBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getToken ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior : dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehaviorKt {
	public static final fun PublicFollowupMessageBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionBehaviorKt {
	public static final fun DeferredEphemeralMessageInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;
	public static synthetic fun DeferredEphemeralMessageInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;
	public static final fun respond (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior, dev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredEphemeralMessageInteractionResponseBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehaviorKt {
	public static final fun respond (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/DeferredMessageInteractionResponseBehavior, dev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior$DefaultImpls {
	public static fun delete (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehaviorKt {
	public static final fun DeferredPublicMessageInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;
	public static synthetic fun DeferredPublicMessageInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;
	public static final fun respond (Ldev/jombi/kordsb/core/behavior/interaction/response/DeferredPublicMessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/EditOriginalResponseKt {
	public static final fun editEphemeralOriginalResponse (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editOriginalResponse (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editOriginalResponseWithUnknownVisibility (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editPublicOriginalResponse (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior, dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehaviorKt {
	public static final fun EphemeralMessageInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;
	public static synthetic fun EphemeralMessageInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehaviorKt {
	public static final fun FollowupPermittingInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
	public static synthetic fun FollowupPermittingInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
	public static final fun createEphemeralFollowup (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createPublicFollowup (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun followUp (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun followUpEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getToken ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehaviorKt {
	public static final synthetic fun followUp (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final synthetic fun followUpEphemeral (Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehaviorKt {
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehaviorKt {
	public static final fun PopupInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;
	public static synthetic fun PopupInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/PopupInteractionResponseBehavior;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior$DefaultImpls {
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/PublicMesageInteractionResponseBehaviorKt {
	public static final fun PublicMessageInteractionResponseBehavior (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;
	public static synthetic fun PublicMessageInteractionResponseBehavior$default (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;
	public static final fun edit (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior : dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior, dev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior$DefaultImpls {
	public static fun delete (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessageOrNull (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;
}

public final class dev/jombi/kordsb/core/builder/components/ButtonBuilderExtensionsKt {
	public static final fun emoji (Ldev/jombi/kordsb/rest/builder/component/ButtonBuilder;Ldev/jombi/kordsb/core/entity/GuildEmoji;)V
	public static final fun emoji (Ldev/jombi/kordsb/rest/builder/component/ButtonBuilder;Ldev/jombi/kordsb/core/entity/ReactionEmoji$Custom;)V
	public static final fun emoji (Ldev/jombi/kordsb/rest/builder/component/ButtonBuilder;Ldev/jombi/kordsb/core/entity/ReactionEmoji$Unicode;)V
}

public final class dev/jombi/kordsb/core/builder/kord/KordBuilder {
	public fun <init> (Ljava/lang/String;)V
	public final fun build (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun cache (Lkotlin/jvm/functions/Function2;)V
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDefaultDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getDefaultStrategy ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getEnableShutdownHook ()Z
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getGatewayEventInterceptor ()Ldev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	public final fun getStackTraceRecovery ()Z
	public final fun getToken ()Ljava/lang/String;
	public final fun requestHandler (Lkotlin/jvm/functions/Function1;)V
	public final fun setApplicationId (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun setDefaultDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setDefaultStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)V
	public final fun setEnableShutdownHook (Z)V
	public final fun setEventFlow (Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun setGatewayEventInterceptor (Ldev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor;)V
	public final fun setHttpClient (Lio/ktor/client/HttpClient;)V
	public final fun setStackTraceRecovery (Z)V
}

public final class dev/jombi/kordsb/core/builder/kord/KordBuilderKt {
	public static final fun invoke (Ldev/jombi/kordsb/gateway/DefaultGateway$Companion;Ldev/jombi/kordsb/core/ClientResources;Ldev/jombi/kordsb/gateway/retry/Retry;)Ldev/jombi/kordsb/gateway/DefaultGateway;
	public static synthetic fun invoke$default (Ldev/jombi/kordsb/gateway/DefaultGateway$Companion;Ldev/jombi/kordsb/core/ClientResources;Ldev/jombi/kordsb/gateway/retry/Retry;ILjava/lang/Object;)Ldev/jombi/kordsb/gateway/DefaultGateway;
}

public final class dev/jombi/kordsb/core/builder/kord/KordProxyBuilder : dev/jombi/kordsb/core/builder/kord/RestOnlyBuilder {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun setApplicationId (Ldev/jombi/kordsb/common/entity/Snowflake;)V
}

public final class dev/jombi/kordsb/core/builder/kord/KordRestOnlyBuilder : dev/jombi/kordsb/core/builder/kord/RestOnlyBuilder {
	public fun <init> (Ljava/lang/String;)V
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getToken ()Ljava/lang/String;
	public fun setApplicationId (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public fun setToken (Ljava/lang/String;)V
}

public abstract class dev/jombi/kordsb/core/builder/kord/RestOnlyBuilder {
	public fun <init> ()V
	public final fun build ()Ldev/jombi/kordsb/core/Kord;
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDefaultDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	protected final fun getHandlerBuilder ()Lkotlin/jvm/functions/Function1;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	protected abstract fun getToken ()Ljava/lang/String;
	public final fun requestHandler (Lkotlin/jvm/functions/Function1;)V
	public abstract fun setApplicationId (Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun setDefaultDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	protected final fun setHandlerBuilder (Lkotlin/jvm/functions/Function1;)V
	public final fun setHttpClient (Lio/ktor/client/HttpClient;)V
}

public final class dev/jombi/kordsb/core/cache/CachingGateway : dev/jombi/kordsb/gateway/Gateway, dev/kord/cache/api/DataCache, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Ldev/kord/cache/api/DataCache;Ldev/jombi/kordsb/gateway/Gateway;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Ldev/kord/cache/api/DataCache;Ldev/jombi/kordsb/gateway/Gateway;Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun detach (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getEntry (Lkotlin/reflect/KType;)Ldev/kord/cache/api/DataEntryCache;
	public fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public fun register (Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register ([Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun send (Ldev/jombi/kordsb/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun start (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/DataCacheExtensionsKt {
	public static final fun createView (Ldev/kord/cache/api/DataCache;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/cache/DataCacheView : dev/kord/cache/api/DataCache {
	public fun <init> (Ldev/kord/cache/api/DataCache;)V
	public fun getEntry (Lkotlin/reflect/KType;)Ldev/kord/cache/api/DataEntryCache;
	public fun register (Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register ([Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/KordCacheBuilder {
	public fun <init> ()V
	public final fun build ()Ldev/kord/cache/api/DataCache;
	public final fun channels (Lkotlin/jvm/functions/Function2;)V
	public final fun disableAll ()V
	public final fun emojis (Lkotlin/jvm/functions/Function2;)V
	public final fun forDescription (Ldev/kord/cache/api/data/DataDescription;Lkotlin/jvm/functions/Function2;)V
	public final fun getDefaultGenerator ()Lkotlin/jvm/functions/Function2;
	public final fun guilds (Lkotlin/jvm/functions/Function2;)V
	public final fun lruCache (I)Lkotlin/jvm/functions/Function2;
	public static synthetic fun lruCache$default (Ldev/jombi/kordsb/core/cache/KordCacheBuilder;IILjava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public final fun members (Lkotlin/jvm/functions/Function2;)V
	public final fun messages (Lkotlin/jvm/functions/Function2;)V
	public final fun none ()Lkotlin/jvm/functions/Function2;
	public final fun presences (Lkotlin/jvm/functions/Function2;)V
	public final fun roles (Lkotlin/jvm/functions/Function2;)V
	public final fun setDefaultGenerator (Lkotlin/jvm/functions/Function2;)V
	public final fun stickers (Lkotlin/jvm/functions/Function2;)V
	public final fun users (Lkotlin/jvm/functions/Function2;)V
	public final fun voiceState (Lkotlin/jvm/functions/Function2;)V
	public final fun webhooks (Lkotlin/jvm/functions/Function2;)V
}

public final class dev/jombi/kordsb/core/cache/QueryKt {
	public static final fun booleanEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/Boolean;)V
	public static final fun idEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public static final fun idEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/String;)V
	public static final fun idGt (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public static final fun idLt (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public static final fun optionalIdEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public static final fun optionalNullableIdEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public static final fun stringEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/String;)V
}

public final class dev/jombi/kordsb/core/cache/ViewKeys {
	public fun <init> ()V
	public fun <init> (Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun add (Ljava/lang/Object;)V
	public final fun getKeys ()Ljava/util/Set;
}

public final class dev/jombi/kordsb/core/cache/data/ActivityData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ActivityData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/ActivityType;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ActivityType;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ActivityType;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/ActivityType;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ActivityType;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ActivityData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ActivityData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ActivityType;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ActivityData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getAssets ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getButtons ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getDetails ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getInstance ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getParty ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getSecrets ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getState ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTimestamps ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/ActivityType;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ActivityData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ActivityData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ActivityData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ActivityData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ActivityData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ActivityData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordActivity;)Ldev/jombi/kordsb/core/cache/data/ActivityData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getDefaultPermission ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDescriptionLocalizations ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDmPermission ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getNameLocalizations ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordApplicationCommand;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandDataKt {
	public static final fun ApplicationCommandGroupData (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;
	public static final fun ApplicationCommandParameterData (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;
	public static final fun ApplicationCommandSubCommandData (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSubCommands ()Ljava/util/List;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Choice;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionChoiceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelTypes ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getChoices ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDefault ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getMaxLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMaxValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMinLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMinValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getRequired ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandOptionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/ApplicationCommandOption;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandOptionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelTypes ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getChoices ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequired ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getParameters ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public final fun isDefault ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationData : dev/jombi/kordsb/core/cache/data/BaseApplicationData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component11 ()Ljava/lang/String;
	public final fun component12 ()Ldev/jombi/kordsb/core/cache/data/TeamData;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component17 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component18 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component19 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ApplicationData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBotPublic ()Z
	public final fun getBotRequireCodeGrant ()Z
	public fun getCoverImage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getCustomInstallUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getDescription ()Ljava/lang/String;
	public fun getFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInstallParams ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getName ()Ljava/lang/String;
	public fun getOwnerId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getPrimarySkuId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getPrivacyPolicyUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getRpcOrigins ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getSlug ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTeam ()Ldev/jombi/kordsb/core/cache/data/TeamData;
	public fun getTermsOfServiceUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordApplication;)Ldev/jombi/kordsb/core/cache/data/ApplicationData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationInteractionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponentType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getComponents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getCustomId ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getName ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getResolvedObjectsData ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getValues ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationInteractionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ApplicationInteractionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/InteractionCallbackData;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/AttachmentData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/AttachmentData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()I
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/AttachmentData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContentType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDescription ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getEphemeral ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getFilename ()Ljava/lang/String;
	public final fun getHeight ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/AttachmentData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/AttachmentData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/AttachmentData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/AttachmentData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/AttachmentData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordAttachment;)Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/BanData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/BanData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/BanData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/BanData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/BanData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getReason ()Ljava/lang/String;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/BanData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/BanData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/BanData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/BanData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/BanData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/BanData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/json/response/BanResponse;)Ldev/jombi/kordsb/core/cache/data/BanData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class dev/jombi/kordsb/core/cache/data/BaseApplicationData {
	public abstract fun getCoverImage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getCustomInstallUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public abstract fun getIcon ()Ljava/lang/String;
	public abstract fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getInstallParams ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOwnerId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public abstract fun getPrimarySkuId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public abstract fun getPrivacyPolicyUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getRpcOrigins ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getSlug ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getTags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getTermsOfServiceUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getVerifyKey ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/cache/data/BaseInviteData {
	public abstract fun getApproximateMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getApproximatePresenceCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getCode ()Ljava/lang/String;
	public abstract fun getExpiresAt ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getGuild ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getGuildScheduledEvent ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getInviterId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public abstract fun getTargetApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getTargetType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
}

public final class dev/jombi/kordsb/core/cache/data/ChannelData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ChannelData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ChannelType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ChannelType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ChannelType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component17 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component18 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component19 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public final fun component20 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component21 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component22 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component23 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component24 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component25 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component26 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ChannelType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ChannelType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getBitrate ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getDefaultAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getIcon ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMessageCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getName ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getNsfw ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getOwnerId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getParentId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getPermissionOverwrites ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPosition ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getRateLimitPerUser ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getRecipients ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getRtcRegion ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getThreadMetadata ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTopic ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public final fun getUserLimit ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getVideoQualityMode ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ChannelData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ChannelData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ChannelData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ChannelData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ChannelData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordChannel;)Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ChannelDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordChannel;)Ldev/jombi/kordsb/core/cache/data/ChannelData;
}

public final class dev/jombi/kordsb/core/cache/data/ChatComponentData : dev/jombi/kordsb/core/cache/data/ComponentData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ChatComponentData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ChatComponentData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ChatComponentData;Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ChatComponentData;
	public fun equals (Ljava/lang/Object;)Z
	public fun getComponents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getCustomId ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getDisabled ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun getEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getLabel ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getMaxLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMaxValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMinLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMinValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getPlaceholder ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getRequired ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getStyle ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ChatComponentData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ChatComponentData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ChatComponentData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ChatComponentData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ChatComponentData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ChatComponentData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ClientStatusData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ClientStatusData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ClientStatusData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDesktop ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMobile ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWeb ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ClientStatusData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ClientStatusData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ClientStatusData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ClientStatusData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ClientStatusData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordClientStatus;)Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/jombi/kordsb/core/cache/data/ComponentData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ComponentData$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public abstract fun getComponents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getCustomId ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getDisabled ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public abstract fun getEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getLabel ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getMaxLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getMaxValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getMinLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getMinValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getPlaceholder ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getRequired ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public abstract fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public abstract fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public abstract fun getValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ComponentData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ComponentData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordComponent;)Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedAuthorData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getName ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedAuthorData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedAuthorData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Author;)Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getColor ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getDescription ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getFields ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getFooter ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getImage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getProvider ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getThumbnail ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTimestamp ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTitle ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVideo ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed;)Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFieldData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedFieldData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInline ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFieldData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedFieldData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFieldData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Field;)Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFooterData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedFooterData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFooterData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedFooterData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedFooterData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Footer;)Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedImageData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedImageData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedImageData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedImageData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedImageData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedImageData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedImageData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedImageData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Image;)Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedProviderData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedProviderData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedProviderData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedProviderData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedProviderData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Provider;)Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedThumbnailData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedThumbnailData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedThumbnailData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Thumbnail;)Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedVideoData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmbedVideoData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmbedVideoData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmbedVideoData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmbedVideoData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordEmbed$Video;)Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmojiData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/EmojiData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)Ldev/jombi/kordsb/core/cache/data/EmojiData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/EmojiData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/EmojiData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnimated ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getAvailable ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getManaged ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequireColons ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getRoles ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/EmojiData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/EmojiData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/EmojiData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/EmojiData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/EmojiData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmojiData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordEmoji;)Ldev/jombi/kordsb/core/cache/data/EmojiData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/EmojiDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordEmoji;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/EmojiData;
}

public final class dev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData$Companion;
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;Z)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;
	public final fun component3 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;Z)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;ZILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPermission ()Z
	public final fun getType ()Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission;)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;
}

public final class dev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData$Companion;
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPermissions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermissions;)Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
}

public final class dev/jombi/kordsb/core/cache/data/GuildData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildData$Companion;
	public synthetic fun <init> (IILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/time/Duration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/VerificationLevel;Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/MFALevel;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/SystemChannelFlags;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/PremiumTier;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/NsfwLevel;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;JLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/VerificationLevel;Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/MFALevel;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/SystemChannelFlags;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/PremiumTier;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/NsfwLevel;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;JLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/VerificationLevel;Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/MFALevel;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/SystemChannelFlags;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/PremiumTier;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/NsfwLevel;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component11-UwyO8pc ()J
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/VerificationLevel;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;
	public final fun component17 ()Ljava/util/List;
	public final fun component18 ()Ljava/util/List;
	public final fun component19 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ldev/jombi/kordsb/common/entity/MFALevel;
	public final fun component21 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component22 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component23 ()Ldev/jombi/kordsb/common/entity/SystemChannelFlags;
	public final fun component24 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component25 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component26 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component27 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component28 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component29 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component3 ()Ljava/lang/String;
	public final fun component30 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component31 ()Ljava/lang/String;
	public final fun component32 ()Ljava/lang/String;
	public final fun component33 ()Ljava/lang/String;
	public final fun component34 ()Ldev/jombi/kordsb/common/entity/PremiumTier;
	public final fun component35 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component36 ()Ljava/lang/String;
	public final fun component37 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component38 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component39 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component40 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component41 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component42 ()Ldev/jombi/kordsb/common/entity/NsfwLevel;
	public final fun component43 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component44 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component45 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component46 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component47 ()Z
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy-JhoTrSQ (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;JLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/VerificationLevel;Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/MFALevel;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/SystemChannelFlags;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/PremiumTier;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/NsfwLevel;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Z)Ldev/jombi/kordsb/core/cache/data/GuildData;
	public static synthetic fun copy-JhoTrSQ$default (Ldev/jombi/kordsb/core/cache/data/GuildData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;JLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/VerificationLevel;Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/MFALevel;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/SystemChannelFlags;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/PremiumTier;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/NsfwLevel;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/GuildData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfkChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getAfkTimeout-UwyO8pc ()J
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getApproximateMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getApproximatePresenceCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getBanner ()Ljava/lang/String;
	public final fun getChannels ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDefaultMessageNotifications ()Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getExplicitContentFilter ()Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getGuildScheduledEvents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getIconHash ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getJoinedAt ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getLarge ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getMaxMembers ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMaxPresences ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMaxVideoChannelUsers ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getMfaLevel ()Ldev/jombi/kordsb/common/entity/MFALevel;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfwLevel ()Ldev/jombi/kordsb/common/entity/NsfwLevel;
	public final fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPreferredLocale ()Ljava/lang/String;
	public final fun getPremiumProgressBarEnabled ()Z
	public final fun getPremiumSubscriptionCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getPremiumTier ()Ldev/jombi/kordsb/common/entity/PremiumTier;
	public final fun getPublicUpdatesChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getRegion ()Ljava/lang/String;
	public final fun getRoles ()Ljava/util/List;
	public final fun getRulesChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSplash ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getStageInstances ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getSystemChannelFlags ()Ldev/jombi/kordsb/common/entity/SystemChannelFlags;
	public final fun getSystemChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getThreads ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVanityUrlCode ()Ljava/lang/String;
	public final fun getVerificationLevel ()Ldev/jombi/kordsb/common/entity/VerificationLevel;
	public final fun getWelcomeScreen ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWidgetChannelId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getWidgetEnabled ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/GuildData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/GuildData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/GuildData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/GuildData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/GuildData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuild;)Ldev/jombi/kordsb/core/cache/data/GuildData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordGuild;)Ldev/jombi/kordsb/core/cache/data/GuildData;
}

public final class dev/jombi/kordsb/core/cache/data/GuildPreviewData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildPreviewData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getApproximateMemberCount ()I
	public final fun getApproximatePresenceCount ()I
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ljava/lang/String;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getSplash ()Ljava/lang/String;
	public final fun getStickers ()Ljava/util/List;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/GuildPreviewData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/GuildPreviewData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildPreviewData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildPreview;)Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildScheduledEventData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/ScheduledEntityType;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Lkotlinx/datetime/Instant;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/ScheduledEntityType;Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCreator ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getCreatorId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getDescription ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getEntityId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEntityMetadata ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;
	public final fun getEntityType ()Ldev/jombi/kordsb/common/entity/ScheduledEntityType;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getImage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrivacyLevel ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;
	public final fun getScheduledEndTime ()Lkotlinx/datetime/Instant;
	public final fun getScheduledStartTime ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;
	public final fun getUserCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/GuildScheduledEventData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildScheduledEventData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildScheduledEvent;)Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildWidgetData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/GuildWidgetData$Companion;
	public synthetic fun <init> (IZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ZLdev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun component1 ()Z
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (ZLdev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;ZLdev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEnabled ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/GuildWidgetData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/GuildWidgetData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/GuildWidgetData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildWidget;)Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/IntegrationData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;Lkotlin/time/Duration;Ldev/jombi/kordsb/common/entity/DiscordUser;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/datetime/Instant;IZLdev/jombi/kordsb/common/entity/IntegrationApplication;Lkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;JLdev/jombi/kordsb/common/entity/DiscordUser;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/datetime/Instant;IZLdev/jombi/kordsb/common/entity/IntegrationApplication;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;JLdev/jombi/kordsb/common/entity/DiscordUser;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/datetime/Instant;IZLdev/jombi/kordsb/common/entity/IntegrationApplication;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10-UwyO8pc ()J
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public final fun component12 ()Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public final fun component13 ()Lkotlinx/datetime/Instant;
	public final fun component14 ()I
	public final fun component15 ()Z
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/IntegrationApplication;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;
	public final fun copy-fynAM7E (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;JLdev/jombi/kordsb/common/entity/DiscordUser;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/datetime/Instant;IZLdev/jombi/kordsb/common/entity/IntegrationApplication;)Ldev/jombi/kordsb/core/cache/data/IntegrationData;
	public static synthetic fun copy-fynAM7E$default (Ldev/jombi/kordsb/core/cache/data/IntegrationData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;JLdev/jombi/kordsb/common/entity/DiscordUser;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/datetime/Instant;IZLdev/jombi/kordsb/common/entity/IntegrationApplication;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/IntegrationData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccount ()Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/IntegrationApplication;
	public final fun getEnableEmoticons ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getEnabled ()Z
	public final fun getExpireBehavior ()Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;
	public final fun getExpireGracePeriod-UwyO8pc ()J
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getRevoked ()Z
	public final fun getRoleId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSubscriberCount ()I
	public final fun getSyncedAt ()Lkotlinx/datetime/Instant;
	public final fun getSyncing ()Z
	public final fun getType ()Ljava/lang/String;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/IntegrationData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/IntegrationData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/IntegrationData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/IntegrationData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordIntegration;)Ldev/jombi/kordsb/core/cache/data/IntegrationData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationsAccountData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationsAccountData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/IntegrationsAccountData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordIntegrationsAccount;)Ldev/jombi/kordsb/core/cache/data/IntegrationsAccountData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InteractionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/InteractionData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()I
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public final fun component4 ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getGuildLocale ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getLocale ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMessage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/InteractionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/InteractionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/InteractionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/InteractionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InteractionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordInteraction;)Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteCreateData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/InviteCreateData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlin/time/Duration;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZILkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()Z
	public final fun component13 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component6-UwyO8pc ()J
	public final fun component7 ()I
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun copy-5ndHN30 (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZI)Ldev/jombi/kordsb/core/cache/data/InviteCreateData;
	public static synthetic fun copy-5ndHN30$default (Ldev/jombi/kordsb/core/cache/data/InviteCreateData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;JILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZIILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/InviteCreateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getInviterId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public final fun getTargetApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getTargetUserType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/InviteCreateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/InviteCreateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/InviteCreateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/InviteCreateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/InviteCreateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteCreateData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/DiscordCreatedInvite;)Ldev/jombi/kordsb/core/cache/data/InviteCreateData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteData : dev/jombi/kordsb/core/cache/data/BaseInviteData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/InviteData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/InviteData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/InviteData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/InviteData;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApproximateMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getApproximatePresenceCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getCode ()Ljava/lang/String;
	public fun getExpiresAt ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuild ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuildScheduledEvent ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getInviterId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getTargetApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTargetType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getTargetUserType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/InviteData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/InviteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/InviteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/InviteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/InviteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordInvite;)Ldev/jombi/kordsb/core/cache/data/InviteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteDeleteData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/InviteDeleteData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;)Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/InviteDeleteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/InviteDeleteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteDeleteData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/DiscordDeletedInvite;)Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteWithMetadataData : dev/jombi/kordsb/core/cache/data/BaseInviteData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;IILkotlin/time/Duration;ZLkotlinx/datetime/Instant;Lkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component12 ()I
	public final fun component13 ()I
	public final fun component14-UwyO8pc ()J
	public final fun component15 ()Z
	public final fun component16 ()Lkotlinx/datetime/Instant;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun copy-GiGF46s (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;)Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;
	public static synthetic fun copy-GiGF46s$default (Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApproximateMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getApproximatePresenceCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public fun getExpiresAt ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuild ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuildScheduledEvent ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getInviterId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public fun getTargetApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTargetType ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/InviteWithMetadataData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/InviteWithMetadataData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordInviteWithMetadata;)Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MemberData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/MemberData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Lkotlinx/datetime/Instant;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/MemberData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getCommunicationDisabledUntil ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getNick ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPending ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getPremiumSince ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/MemberData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/MemberData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/MemberData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/MemberData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MemberData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordUpdatedGuildMember;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordAddedGuildMember;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordGuildMember;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordInteractionGuildMember;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MemberDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordGuildMember;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/MemberData;
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordInteractionGuildMember;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/MemberData;
}

public final class dev/jombi/kordsb/core/cache/data/MembersChunkData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/MembersChunkData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/MembersChunkData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/MembersChunkData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/MembersChunkData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChunkCount ()I
	public final fun getChunkIndex ()I
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/Set;
	public final fun getNonce ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getNotFound ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPresences ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUsers ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/MembersChunkData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/MembersChunkData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/MembersChunkData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/MembersChunkData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/MembersChunkData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MembersChunkData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/GuildMembersChunkData;)Ldev/jombi/kordsb/core/cache/data/MembersChunkData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/MessageData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/MessageType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/MessageType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/MessageType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ljava/util/List;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/List;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component17 ()Z
	public final fun component18 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component19 ()Ldev/jombi/kordsb/common/entity/MessageType;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component20 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component21 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component22 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component23 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component24 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component25 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component26 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component27 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component28 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lkotlinx/datetime/Instant;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/MessageType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/MessageData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ZLdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/MessageType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivity ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getApplication ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getAttachments ()Ljava/util/List;
	public final fun getAuthor ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getComponents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getContent ()Ljava/lang/String;
	public final fun getEditedTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getEmbeds ()Ljava/util/List;
	public final fun getFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMentionEveryone ()Z
	public final fun getMentionRoles ()Ljava/util/List;
	public final fun getMentionedChannels ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMentions ()Ljava/util/List;
	public final fun getMessageReference ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getNonce ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPinned ()Z
	public final fun getReactions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getReferencedMessage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTts ()Z
	public final fun getType ()Ldev/jombi/kordsb/common/entity/MessageType;
	public final fun getWebhookId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public final fun plus (Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public final fun plus (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/MessageReactionAddData;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/MessageData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/MessageData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/MessageData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/MessageData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordMessage;)Ldev/jombi/kordsb/core/cache/data/MessageData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordMessage;)Ldev/jombi/kordsb/core/cache/data/MessageData;
}

public final class dev/jombi/kordsb/core/cache/data/MessageInteractionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/MessageInteractionData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/InteractionType;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/MessageInteractionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/MessageInteractionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageInteractionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordMessageInteraction;)Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageReferenceData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/MessageReferenceData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;)Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/MessageReferenceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/MessageReferenceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/MessageReferenceData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordMessageReference;)Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/NotSerializable : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/NotSerializable;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Void;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/jombi/kordsb/core/cache/data/OptionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/OptionData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)Ldev/jombi/kordsb/core/cache/data/OptionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/OptionData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/OptionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFocused ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getSubCommands ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getValues ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/OptionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/OptionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/OptionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/OptionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/OptionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/OptionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Option;)Ldev/jombi/kordsb/core/cache/data/OptionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PartialApplicationData : dev/jombi/kordsb/core/cache/data/BaseApplicationData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/PartialApplicationData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component17 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCoverImage ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getCustomInstallUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getDescription ()Ljava/lang/String;
	public fun getFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInstallParams ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getName ()Ljava/lang/String;
	public fun getOwnerId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getPrimarySkuId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun getPrivacyPolicyUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getRpcOrigins ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getSlug ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getTermsOfServiceUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/PartialApplicationData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/PartialApplicationData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PartialApplicationData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordPartialApplication;)Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PartialGuildData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/PartialGuildData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBanner ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getDescription ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getGuildScheduledEvents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfwLevel ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getOwner ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getPremiumProgressBarEnabled ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getSplash ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getStageInstances ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVanityUrlCode ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getVerificationLevel ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getWelcomeScreen ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/PartialGuildData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/PartialGuildData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/PartialGuildData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/PartialGuildData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PartialGuildData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordPartialGuild;)Ldev/jombi/kordsb/core/cache/data/PartialGuildData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PermissionOverwriteData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/OverwriteType;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/OverwriteType;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/OverwriteType;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/OverwriteType;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;)Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/OverwriteType;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowed ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getDenied ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/OverwriteType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/PermissionOverwriteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PermissionOverwriteData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Overwrite;)Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PresenceData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/PresenceData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/PresenceStatus;Ljava/util/List;Ldev/jombi/kordsb/core/cache/data/ClientStatusData;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/PresenceStatus;Ljava/util/List;Ldev/jombi/kordsb/core/cache/data/ClientStatusData;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/PresenceStatus;Ljava/util/List;Ldev/jombi/kordsb/core/cache/data/ClientStatusData;)Ldev/jombi/kordsb/core/cache/data/PresenceData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/PresenceData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/PresenceStatus;Ljava/util/List;Ldev/jombi/kordsb/core/cache/data/ClientStatusData;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/PresenceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivities ()Ljava/util/List;
	public final fun getClientStatus ()Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/PresenceData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/PresenceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/PresenceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/PresenceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/PresenceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PresenceData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordPresenceUpdate;)Ldev/jombi/kordsb/core/cache/data/PresenceData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/PresenceDataKt {
	public static final fun getId (Ldev/jombi/kordsb/core/cache/data/PresenceData;)Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/data/ReactionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ReactionData$Companion;
	public synthetic fun <init> (IIZLdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (IZLdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Z)V
	public synthetic fun <init> (IZLdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Z
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun copy (IZLdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Z)Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ReactionData;IZLdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ZILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public final fun getEmojiAnimated ()Z
	public final fun getEmojiId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public final fun getMe ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ReactionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ReactionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ReactionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ReactionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ReactionData$Companion {
	public final fun from (IZLdev/jombi/kordsb/common/entity/DiscordPartialEmoji;)Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public final fun from (Ldev/jombi/kordsb/common/entity/Reaction;)Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;)Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEmoji ()Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/DiscordRemovedEmoji;)Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RegionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/RegionData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZ)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun copy (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZ)Ldev/jombi/kordsb/core/cache/data/RegionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/RegionData;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/RegionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustom ()Z
	public final fun getDeprecated ()Z
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptimal ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/RegionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/RegionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/RegionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/RegionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/RegionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RegionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/DiscordVoiceRegion;)Ldev/jombi/kordsb/core/cache/data/RegionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RemovedReactionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/RemovedReactionData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/RemovedReactionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/RemovedReactionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RemovedReactionData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/DiscordRemovedReactionEmoji;)Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ResolvedObjectsData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttachments ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getChannels ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMembers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getMessages ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getRoles ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUsers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ResolvedObjectsData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ResolvedObjectsData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/ResolvedObjects;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RoleData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/RoleData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;IZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/Permissions;ZZLdev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;IZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/Permissions;ZZLdev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;IZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/Permissions;ZZLdev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Z
	public final fun component11 ()Z
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Z
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component8 ()I
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;IZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/Permissions;ZZLdev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/RoleData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/RoleData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;IZLdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILdev/jombi/kordsb/common/entity/Permissions;ZZLdev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/RoleData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()I
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getHoisted ()Z
	public final fun getIcon ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getManaged ()Z
	public final fun getMentionable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getPosition ()I
	public final fun getTags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUnicodeEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/RoleData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/RoleData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/RoleData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/RoleData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/RoleData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RoleData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordGuildRole;)Ldev/jombi/kordsb/core/cache/data/RoleData;
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordRole;)Ldev/jombi/kordsb/core/cache/data/RoleData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RoleDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordRole;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/RoleData;
}

public final class dev/jombi/kordsb/core/cache/data/RoleTagsData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/RoleTagsData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Z)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Z)Ldev/jombi/kordsb/core/cache/data/RoleTagsData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/RoleTagsData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;ZILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/RoleTagsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBotId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getIntegrationId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getPremiumSubscriber ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/RoleTagsData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/RoleTagsData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/RoleTagsData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/RoleTagsData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/RoleTagsData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/RoleTagsData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordRoleTags;)Ldev/jombi/kordsb/core/cache/data/RoleTagsData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/SelectOptionData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/SelectOptionData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;)Ldev/jombi/kordsb/core/cache/data/SelectOptionData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/SelectOptionData;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/SelectOptionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefault ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/SelectOptionData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/SelectOptionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/SelectOptionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/SelectOptionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/SelectOptionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/SelectOptionData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordSelectOption;)Ldev/jombi/kordsb/core/cache/data/SelectOptionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StageInstanceData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/StageInstanceData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/StageInstanceData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPrivacyLevel ()Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/StageInstanceData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/StageInstanceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/StageInstanceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/StageInstanceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StageInstanceData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordStageInstance;)Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StageInstanceDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordStageInstance;)Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
}

public final class dev/jombi/kordsb/core/cache/data/StickerData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/StickerData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/MessageStickerType;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/MessageStickerType;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/MessageStickerType;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/MessageStickerType;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;)Ldev/jombi/kordsb/core/cache/data/StickerData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/StickerData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/MessageStickerType;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/StickerData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvailable ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFormatType ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getSortValue ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun getTags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/StickerData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/StickerData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/StickerData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/StickerData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/StickerData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StickerData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordMessageSticker;)Ldev/jombi/kordsb/core/cache/data/StickerData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StickerItemData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/StickerItemData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/MessageStickerType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/MessageStickerType;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/MessageStickerType;)Ldev/jombi/kordsb/core/cache/data/StickerItemData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/StickerItemData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/MessageStickerType;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/StickerItemData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFormatType ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/StickerItemData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/StickerItemData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/StickerItemData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/StickerItemData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/StickerItemData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StickerItemData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordStickerItem;)Ldev/jombi/kordsb/core/cache/data/StickerItemData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/StickerPackData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/StickerPackData$Companion;
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/StickerPackData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/StickerPackData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/StickerPackData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBannerAssetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getCoverStickerId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getSkuId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getStickers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/data/StickerPackData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordStickerPack;)Ldev/jombi/kordsb/core/cache/data/StickerPackData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
}

public final class dev/jombi/kordsb/core/cache/data/TeamData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/TeamData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/TeamData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/TeamData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getOwnerUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/TeamData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/TeamData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/TeamData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/TeamData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/TeamData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TeamData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordTeam;)Ldev/jombi/kordsb/core/cache/data/TeamData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TeamMemberData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/TeamMemberData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/TeamMembershipState;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/TeamMembershipState;Ljava/util/List;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public final fun getMembershipState ()Ldev/jombi/kordsb/common/entity/TeamMembershipState;
	public final fun getPermissions ()Ljava/util/List;
	public final fun getTeamId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/TeamMemberData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/TeamMemberData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/TeamMemberData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/TeamMemberData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/TeamMemberData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TeamMemberData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordTeamMember;)Ldev/jombi/kordsb/core/cache/data/TeamMemberData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TemplateData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/TemplateData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ljava/lang/Boolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ljava/lang/Boolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/jombi/kordsb/core/cache/data/PartialGuildData;
	public final fun component11 ()Ljava/lang/Boolean;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component6 ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Lkotlinx/datetime/Instant;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ljava/lang/Boolean;)Ldev/jombi/kordsb/core/cache/data/TemplateData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/TemplateData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/UserData;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ljava/lang/Boolean;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/TemplateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getCreator ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun getCreatorId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSerializedSourceGuild ()Ldev/jombi/kordsb/core/cache/data/PartialGuildData;
	public final fun getSourceGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUpdatedAt ()Lkotlinx/datetime/Instant;
	public final fun getUsageCount ()I
	public fun hashCode ()I
	public final fun isDirty ()Ljava/lang/Boolean;
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/TemplateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/TemplateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/TemplateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/TemplateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/TemplateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TemplateData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordTemplate;)Ldev/jombi/kordsb/core/cache/data/TemplateData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TemplateDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordTemplate;)Ldev/jombi/kordsb/core/cache/data/TemplateData;
}

public final class dev/jombi/kordsb/core/cache/data/TextInputComponentData : dev/jombi/kordsb/core/cache/data/ComponentData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/TextInputComponentData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public final fun component10 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component13 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component14 ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public final fun component15 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component16 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;Ldev/jombi/kordsb/common/entity/ComponentType;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalInt;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;
	public fun equals (Ljava/lang/Object;)Z
	public fun getComponents ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getCustomId ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getDisabled ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun getEmoji ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getLabel ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getMaxLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMaxValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMinLength ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMinValues ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getOptions ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getPlaceholder ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getRequired ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getStyle ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getUrl ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/TextInputComponentData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/TextInputComponentData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/TextInputComponentData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadListSyncData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ThreadListSyncData$Companion;
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannelIds ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getThreads ()Ljava/util/List;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadListSyncData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/ThreadListSync;)Ldev/jombi/kordsb/core/cache/data/ThreadListSyncData;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMemberData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ThreadMemberData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;I)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()I
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;I)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;IILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFlags ()I
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getJoinTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMemberData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ThreadMemberData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMemberData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public static synthetic fun from$default (Ldev/jombi/kordsb/core/cache/data/ThreadMemberData$Companion;Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMemberDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordThreadMember;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData$Companion;
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILdev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAddedMembers ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMemberCount ()I
	public final fun getRemovedMemberIds ()Ldev/jombi/kordsb/common/entity/optional/Optional;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData$Companion {
	public final fun from (Ldev/jombi/kordsb/gateway/ThreadMembersUpdate;)Ldev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMetadataData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData$Companion;
	public synthetic fun <init> (IZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Lkotlinx/datetime/Instant;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;ZLkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArchiveTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getArchived ()Z
	public final fun getAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public final fun getCreateTimestamp ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getInvitable ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getLocked ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMetadataData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/ThreadMetadataData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordThreadMetadata;)Ldev/jombi/kordsb/core/cache/data/ThreadMetadataData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/UserData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/UserData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/Integer;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;Ldev/jombi/kordsb/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccentColor ()Ljava/lang/Integer;
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getBanner ()Ljava/lang/String;
	public final fun getBot ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getDiscriminator ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPublicFlags ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/UserData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/UserData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/UserData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/UserData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/UserData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordOptionallyMemberUser;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordUser;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun from (Ldev/jombi/kordsb/gateway/DiscordInviteUser;)Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/UserDataKt {
	public static final fun toData (Ldev/jombi/kordsb/common/entity/DiscordUser;)Ldev/jombi/kordsb/core/cache/data/UserData;
}

public final class dev/jombi/kordsb/core/cache/data/VoiceStateData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/VoiceStateData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZZZLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/datetime/Instant;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZZZLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/datetime/Instant;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZZZLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/datetime/Instant;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component10 ()Z
	public final fun component11 ()Z
	public final fun component12 ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun component13 ()Lkotlinx/datetime/Instant;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZZZLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/datetime/Instant;)Ldev/jombi/kordsb/core/cache/data/VoiceStateData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/VoiceStateData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZZZLdev/jombi/kordsb/common/entity/optional/OptionalBoolean;Lkotlinx/datetime/Instant;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/VoiceStateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDeaf ()Z
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMemberId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getMute ()Z
	public final fun getRequestToSpeakTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getSelfDeaf ()Z
	public final fun getSelfMute ()Z
	public final fun getSelfStream ()Ldev/jombi/kordsb/common/entity/optional/OptionalBoolean;
	public final fun getSelfVideo ()Z
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getSuppress ()Z
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/VoiceStateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/VoiceStateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/VoiceStateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/VoiceStateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/VoiceStateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/VoiceStateData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordVoiceState;)Ldev/jombi/kordsb/core/cache/data/VoiceStateData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/VoiceStateDataKt {
	public static final fun getId (Ldev/jombi/kordsb/core/cache/data/VoiceStateData;)Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/cache/data/WebhookData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/WebhookData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/WebhookType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/WebhookType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/WebhookType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/WebhookType;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun component9 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/WebhookType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/WebhookData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/WebhookType;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/optional/Optional;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getToken ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/WebhookType;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/WebhookData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/WebhookData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/WebhookData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/WebhookData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/WebhookData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordWebhook;)Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmojiId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordWelcomeScreenChannel;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenData {
	public static final field Companion Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getWelcomeChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/cache/data/WelcomeScreenData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordWelcomeScreen;)Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/entity/Activity {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ActivityData;)V
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getAssets ()Ldev/jombi/kordsb/core/entity/Activity$Assets;
	public final fun getButtons ()Ljava/util/List;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ActivityData;
	public final fun getDetails ()Ljava/lang/String;
	public final fun getEmoji ()Ldev/jombi/kordsb/common/entity/DiscordActivityEmoji;
	public final fun getEnd ()Lkotlinx/datetime/Instant;
	public final fun getFlags ()Ldev/jombi/kordsb/common/entity/ActivityFlags;
	public final fun getName ()Ljava/lang/String;
	public final fun getParty ()Ldev/jombi/kordsb/core/entity/Activity$Party;
	public final fun getSecrets ()Ldev/jombi/kordsb/core/entity/Activity$Secrets;
	public final fun getStart ()Lkotlinx/datetime/Instant;
	public final fun getState ()Ljava/lang/String;
	public final synthetic fun getStop ()Lkotlinx/datetime/Instant;
	public static fun getStop$delegate (Ldev/jombi/kordsb/core/entity/Activity;)Ljava/lang/Object;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/ActivityType;
	public final fun getUrl ()Ljava/lang/String;
	public final fun isInstance ()Ljava/lang/Boolean;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Activity$Assets {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/jombi/kordsb/core/entity/Activity$Assets;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Activity$Assets;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Activity$Assets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLargeImage ()Ljava/lang/String;
	public final fun getLargeText ()Ljava/lang/String;
	public final fun getSmallImage ()Ljava/lang/String;
	public final fun getSmallText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Activity$Party {
	public fun <init> (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ldev/jombi/kordsb/core/entity/Activity$Party;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Activity$Party;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Activity$Party;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCurrentSize ()Ljava/lang/Integer;
	public final fun getId ()Ljava/lang/String;
	public final fun getMaxSize ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Activity$Secrets {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/jombi/kordsb/core/entity/Activity$Secrets;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Activity$Secrets;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Activity$Secrets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getJoin ()Ljava/lang/String;
	public final fun getMatch ()Ljava/lang/String;
	public final fun getSpectate ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Application : dev/jombi/kordsb/core/entity/BaseApplication {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationData;
	public synthetic fun getData ()Ldev/jombi/kordsb/core/cache/data/BaseApplicationData;
	public final synthetic fun getOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRequireCodeGrant ()Z
	public final fun getTeam ()Ldev/jombi/kordsb/core/entity/Team;
	public final fun getTeamId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun isPublic ()Z
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Application;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/BaseApplication;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/Attachment : dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/AttachmentData;Ldev/jombi/kordsb/core/Kord;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/AttachmentData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Attachment;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Attachment;Ldev/jombi/kordsb/core/cache/data/AttachmentData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Attachment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContentType ()Ljava/lang/String;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/AttachmentData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFilename ()Ljava/lang/String;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public final fun isEphemeral ()Z
	public final fun isImage ()Z
	public final fun isSpoiler ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/AttachmentKt {
	public static final fun toRawType (Ldev/jombi/kordsb/core/entity/Attachment;)Ldev/jombi/kordsb/common/entity/DiscordAttachment;
}

public final class dev/jombi/kordsb/core/entity/AuditLog : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordAuditLog;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;)V
	public final fun getData ()Ldev/jombi/kordsb/common/entity/DiscordAuditLog;
	public final fun getEntries ()Ljava/util/List;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getIntegrations ()Ljava/util/List;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getThreads ()Ljava/util/List;
	public final fun getUsers ()Ljava/util/List;
	public final fun getWebhooks ()Ljava/util/List;
}

public final class dev/jombi/kordsb/core/entity/AuditLogEntry : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/common/entity/DiscordAuditLogEntry;Ldev/jombi/kordsb/core/Kord;)V
	public final fun get (Ldev/jombi/kordsb/common/entity/AuditLogChangeKey;)Ldev/jombi/kordsb/common/entity/AuditLogChange;
	public final fun getActionType ()Ldev/jombi/kordsb/common/entity/AuditLogEvent;
	public final fun getChanges ()Ljava/util/List;
	public final fun getData ()Ldev/jombi/kordsb/common/entity/DiscordAuditLogEntry;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOptions ()Ldev/jombi/kordsb/common/entity/AuditLogEntryOptionalInfo;
	public final fun getReason ()Ljava/lang/String;
	public final fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/Ban : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/BanData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/BanData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/BanData;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getReason ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Ban;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public abstract class dev/jombi/kordsb/core/entity/BaseApplication : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public synthetic fun <init> (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getCoverImageHash ()Ljava/lang/String;
	public final fun getCustomInstallUrl ()Ljava/lang/String;
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/BaseApplicationData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFlags ()Ldev/jombi/kordsb/common/entity/ApplicationFlags;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIconHash ()Ljava/lang/String;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getInstallParams ()Ldev/jombi/kordsb/common/entity/InstallParams;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getOwner ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getOwnerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPrimarySkuId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPrivacyPolicyUrl ()Ljava/lang/String;
	public final fun getRpcOrigins ()Ljava/util/List;
	public final fun getSlug ()Ljava/lang/String;
	public final fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTags ()Ljava/util/List;
	public final fun getTermsOfServiceUrl ()Ljava/lang/String;
	public final fun getVerifyKey ()Ljava/lang/String;
	public final fun hashCode ()I
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/BaseApplication;
}

public final class dev/jombi/kordsb/core/entity/ClientStatus {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ClientStatusData;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ClientStatusData;
	public final fun getDesktop ()Ldev/jombi/kordsb/core/entity/ClientStatus$Client$Desktop;
	public final fun getMobile ()Ldev/jombi/kordsb/core/entity/ClientStatus$Client$Mobile;
	public final fun getWeb ()Ldev/jombi/kordsb/core/entity/ClientStatus$Client$Web;
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/jombi/kordsb/core/entity/ClientStatus$Client {
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
}

public final class dev/jombi/kordsb/core/entity/ClientStatus$Client$Desktop : dev/jombi/kordsb/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;)V
}

public final class dev/jombi/kordsb/core/entity/ClientStatus$Client$Mobile : dev/jombi/kordsb/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;)V
}

public final class dev/jombi/kordsb/core/entity/ClientStatus$Client$Web : dev/jombi/kordsb/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/jombi/kordsb/common/entity/PresenceStatus;)V
}

public final class dev/jombi/kordsb/core/entity/Embed : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun apply (Ldev/jombi/kordsb/rest/builder/message/EmbedBuilder;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed;Ldev/jombi/kordsb/core/cache/data/EmbedData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ldev/jombi/kordsb/core/entity/Embed$Author;
	public final fun getColor ()Ldev/jombi/kordsb/common/Color;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFields ()Ljava/util/List;
	public final fun getFooter ()Ldev/jombi/kordsb/core/entity/Embed$Footer;
	public final fun getImage ()Ldev/jombi/kordsb/core/entity/Embed$Image;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getProvider ()Ldev/jombi/kordsb/core/entity/Embed$Provider;
	public final fun getThumbnail ()Ldev/jombi/kordsb/core/entity/Embed$Thumbnail;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTitle ()Ljava/lang/String;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/EmbedType;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getVideo ()Ldev/jombi/kordsb/core/entity/Embed$Video;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Author : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Author;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Author;Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Author;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedAuthorData;
	public final fun getIconUrl ()Ljava/lang/String;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getProxyIconUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Field : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Field;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Field;Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Field;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedFieldData;
	public final fun getInline ()Ljava/lang/Boolean;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Footer : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Footer;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Footer;Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Footer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedFooterData;
	public final fun getIconUrl ()Ljava/lang/String;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getProxyIconUrl ()Ljava/lang/String;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Image : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedImageData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedImageData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Image;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Image;Ldev/jombi/kordsb/core/cache/data/EmbedImageData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Image;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedImageData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Provider : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Provider;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Provider;Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Provider;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedProviderData;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Thumbnail : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Thumbnail;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Thumbnail;Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Thumbnail;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedThumbnailData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Embed$Video : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/Embed$Video;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Embed$Video;Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Embed$Video;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmbedVideoData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/Entity : java/lang/Comparable {
	public static final field Companion Ldev/jombi/kordsb/core/entity/Entity$Companion;
	public abstract fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public abstract fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/Entity$Companion {
	public final fun getComparator ()Ljava/util/Comparator;
}

public final class dev/jombi/kordsb/core/entity/Entity$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public final class dev/jombi/kordsb/core/entity/Guild : dev/jombi/kordsb/core/behavior/GuildBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createSticker (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/rest/NamedFile;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editMFALevel (Ldev/jombi/kordsb/common/entity/MFALevel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editSelfNickname (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editWelcomeScreen (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public final fun getAfkChannel ()Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
	public final fun getAfkChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAfkChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getAfkTimeout-UwyO8pc ()J
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getApproximateMemberCount ()Ljava/lang/Integer;
	public final fun getApproximatePresenceCount ()Ljava/lang/Integer;
	public fun getBan (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBanner (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBannerHash ()Ljava/lang/String;
	public final fun getBannerUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public fun getBans ()Lkotlinx/coroutines/flow/Flow;
	public fun getCachedThreads ()Lkotlinx/coroutines/flow/Flow;
	public fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelBehaviors ()Ljava/util/Set;
	public final fun getChannelIds ()Ljava/util/Set;
	public fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public final fun getContentFilter ()Ldev/jombi/kordsb/common/entity/ExplicitContentFilter;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildData;
	public final fun getDefaultMessageNotificationLevel ()Ldev/jombi/kordsb/common/entity/DefaultMessageNotificationLevel;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDiscoverySplashHash ()Ljava/lang/String;
	public final fun getDiscoverySplashUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public final synthetic fun getEmbedChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public final fun getEmbedChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getEmbedChannel$delegate (Ldev/jombi/kordsb/core/entity/Guild;)Ljava/lang/Object;
	public final synthetic fun getEmbedChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getEmbedChannelId$delegate (Ldev/jombi/kordsb/core/entity/Guild;)Ljava/lang/Object;
	public final fun getEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getEmojiIds ()Ljava/util/Set;
	public final fun getEmojiOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis ()Lkotlinx/coroutines/flow/Flow;
	public final fun getEveryoneRole ()Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public final fun getEveryoneRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getEveryoneRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFeatures ()Ljava/util/Set;
	public fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIcon (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIconHash ()Ljava/lang/String;
	public final fun getIconUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getIntegrations ()Lkotlinx/coroutines/flow/Flow;
	public fun getInvite (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInviteOrNull (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public final fun getJoinedTime ()Lkotlinx/datetime/Instant;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMaxMembers ()Ljava/lang/Integer;
	public final fun getMaxPresences ()I
	public final fun getMaxVideoChannelUsers ()Ljava/lang/Integer;
	public fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberCount ()Ljava/lang/Integer;
	public fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMembers (Ljava/lang/String;I)Lkotlinx/coroutines/flow/Flow;
	public final fun getMfaLevel ()Ldev/jombi/kordsb/common/entity/MFALevel;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfw ()Ldev/jombi/kordsb/common/entity/NsfwLevel;
	public final fun getOwner ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getOwnerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getPreferredLocale ()Ljava/util/Locale;
	public final fun getPremiumProgressBarEnabled ()Z
	public final fun getPremiumSubscriptionCount ()Ljava/lang/Integer;
	public final fun getPremiumTier ()Ldev/jombi/kordsb/common/entity/PremiumTier;
	public fun getPresences ()Lkotlinx/coroutines/flow/Flow;
	public fun getPreview (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPreviewOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPruneCount (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPublicUpdatesChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public final fun getPublicUpdatesChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPublicUpdatesChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getRegionId ()Ljava/lang/String;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRulesChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public final fun getRulesChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRulesChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSplash (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSplashHash ()Ljava/lang/String;
	public final fun getSplashUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public final fun getStageInstances ()Ljava/util/Set;
	public fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickers ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getSystemChannel ()Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
	public final fun getSystemChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSystemChannelFlags ()Ldev/jombi/kordsb/common/entity/SystemChannelFlags;
	public final fun getSystemChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates ()Lkotlinx/coroutines/flow/Flow;
	public final fun getThreads ()Lkotlinx/coroutines/flow/Flow;
	public final fun getVanityCode ()Ljava/lang/String;
	public final fun getVanityUrl ()Ljava/lang/String;
	public fun getVanityUrl (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getVerificationLevel ()Ldev/jombi/kordsb/common/entity/VerificationLevel;
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public final fun getWelcomeScreen ()Ldev/jombi/kordsb/core/entity/WelcomeScreen;
	public fun getWelcomeScreen (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWelcomeScreenOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWidget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getWidgetChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public final fun getWidgetChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getWidgetChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getWidgetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isLarge ()Ljava/lang/Boolean;
	public final fun isOwner ()Z
	public final fun isWidgetEnabled ()Z
	public fun kick (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun modifySelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun prune (ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun unban (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Guild;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/GuildEmoji : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/EmojiData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/EmojiData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/entity/GuildEmoji;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun edit (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/EmojiData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getImage ()Ldev/jombi/kordsb/core/entity/Icon;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMention ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequiresColons ()Z
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public final fun isAvailable ()Z
	public final fun isManaged ()Z
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/GuildEmoji;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/GuildPreview : dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;Ldev/jombi/kordsb/core/Kord;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getApproximateMemberCount ()I
	public final fun getApproximatePresenceCount ()I
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildPreviewData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ljava/lang/String;
	public final fun getEmojis ()Ljava/util/Set;
	public final fun getFeatures ()Ljava/util/Set;
	public final fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getSplash ()Ljava/lang/String;
	public final fun getStickers ()Ljava/util/Set;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/GuildScheduledEvent : dev/jombi/kordsb/core/behavior/GuildScheduledEventBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asGuildScheduledEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asGuildScheduledEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchGuildScheduledEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchGuildScheduledEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCreator ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getCreatorId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildScheduledEventData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEntityId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEntityMetadata ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventEntityMetadata;
	public final fun getEntityType ()Ldev/jombi/kordsb/common/entity/ScheduledEntityType;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getImageHash ()Ljava/lang/String;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrivacyLevel ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventPrivacyLevel;
	public final fun getScheduledEndTime ()Lkotlinx/datetime/Instant;
	public final fun getScheduledStartTime ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/GuildScheduledEventStatus;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUserCount ()Ljava/lang/Integer;
	public fun getUsers ()Lkotlinx/coroutines/flow/Flow;
	public fun getUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/GuildSticker : dev/jombi/kordsb/core/entity/Sticker, dev/jombi/kordsb/core/behavior/StickerBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asSticker (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asStickerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchSticker (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchStickerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/GuildWidget : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun edit (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildWidgetData;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun isEnabled ()Z
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/GuildWidget;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public abstract class dev/jombi/kordsb/core/entity/Icon : dev/jombi/kordsb/core/KordObject {
	public synthetic fun <init> (ZLdev/jombi/kordsb/rest/route/CdnUrl;Ldev/jombi/kordsb/core/Kord;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAnimated ()Z
	public final fun getCdnUrl ()Ldev/jombi/kordsb/rest/route/CdnUrl;
	public final fun getFormat ()Ldev/jombi/kordsb/rest/Image$Format;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Format;Ldev/jombi/kordsb/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getUrl ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Icon$DefaultUserAvatar : dev/jombi/kordsb/core/entity/Icon {
	public fun <init> (ILdev/jombi/kordsb/core/Kord;)V
}

public final class dev/jombi/kordsb/core/entity/Icon$EmojiIcon : dev/jombi/kordsb/core/entity/Icon {
	public fun <init> (ZLdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;)V
}

public final class dev/jombi/kordsb/core/entity/Icon$MemberAvatar : dev/jombi/kordsb/core/entity/Icon {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;)V
}

public final class dev/jombi/kordsb/core/entity/Icon$RoleIcon : dev/jombi/kordsb/core/entity/Icon {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;)V
}

public final class dev/jombi/kordsb/core/entity/Icon$UserAvatar : dev/jombi/kordsb/core/entity/Icon {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;)V
}

public final class dev/jombi/kordsb/core/entity/Integration : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/IntegrationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/IntegrationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/entity/Integration;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/IntegrationData;
	public final fun getEnablesEmoticons ()Z
	public final fun getExpireBehavior ()Ldev/jombi/kordsb/common/entity/IntegrationExpireBehavior;
	public final fun getExpireGracePeriod-UwyO8pc ()J
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getRole ()Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public final fun getRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getSyncedAt ()Lkotlinx/datetime/Instant;
	public final fun getType ()Ljava/lang/String;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isEnabled ()Z
	public final fun isSyncing ()Z
	public final fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Integration;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/IntegrationKt {
	public static final fun edit (Ldev/jombi/kordsb/core/entity/Integration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/jombi/kordsb/core/entity/Invite : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/BaseInviteData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/BaseInviteData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/entity/Invite;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getApproximateMemberCount ()Ljava/lang/Integer;
	public final fun getApproximatePresenceCount ()Ljava/lang/Integer;
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public final synthetic fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/BaseInviteData;
	public final fun getExpiresAt ()Lkotlinx/datetime/Instant;
	public final fun getGuildScheduledEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public final fun getInviter ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final synthetic fun getInviter (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getInviterOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getPartialGuild ()Ldev/jombi/kordsb/core/entity/PartialGuild;
	public final fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTargetApplication ()Ldev/jombi/kordsb/core/entity/PartialApplication;
	public final fun getTargetType ()Ldev/jombi/kordsb/common/entity/InviteTargetType;
	public final fun getTargetUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final synthetic fun getTargetUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getTargetUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getTargetUserType ()Ldev/jombi/kordsb/common/entity/TargetUserType;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Invite;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/InviteWithMetadata : dev/jombi/kordsb/core/entity/Invite {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public synthetic fun getData ()Ldev/jombi/kordsb/core/cache/data/BaseInviteData;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InviteWithMetadataData;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Invite;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/InviteWithMetadata;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public abstract interface class dev/jombi/kordsb/core/entity/KordEntity : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Entity {
}

public final class dev/jombi/kordsb/core/entity/KordEntity$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/KordEntity;Ldev/jombi/kordsb/core/entity/Entity;)I
}

public final class dev/jombi/kordsb/core/entity/Member : dev/jombi/kordsb/core/entity/User, dev/jombi/kordsb/core/behavior/MemberBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/MemberData;Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/MemberData;Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCommunicationDisabledUntil ()Lkotlinx/datetime/Instant;
	public final fun getDisplayName ()Ljava/lang/String;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getMemberAvatar ()Ldev/jombi/kordsb/core/entity/Icon;
	public final fun getMemberData ()Ldev/jombi/kordsb/core/cache/data/MemberData;
	public final fun getNickname ()Ljava/lang/String;
	public fun getNicknameMention ()Ljava/lang/String;
	public final fun getPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPremiumSince ()Lkotlinx/datetime/Instant;
	public fun getPresence (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPresenceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getVoiceState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getVoiceStateOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isPending ()Z
	public fun kick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun removeRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/User;
}

public final class dev/jombi/kordsb/core/entity/Message : dev/jombi/kordsb/core/behavior/MessageBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/MessageData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/MessageData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addReaction (Ldev/jombi/kordsb/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun addReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteAllReactions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteOwnReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteReaction (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteReaction (Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getActionRows ()Ljava/util/List;
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getAttachments ()Ljava/util/Set;
	public final fun getAuthor ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getAuthorAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getComponents ()Ljava/util/List;
	public final fun getContent ()Ljava/lang/String;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/MessageData;
	public final fun getEditedTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getEmbeds ()Ljava/util/List;
	public final fun getFlags ()Ldev/jombi/kordsb/common/entity/MessageFlags;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/jombi/kordsb/core/entity/Message$Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMentionedChannelBehaviors ()Ljava/util/Set;
	public final fun getMentionedChannelIds ()Ljava/util/Set;
	public final fun getMentionedChannels ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionedRoleIds ()Ljava/util/Set;
	public final fun getMentionedRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionedUserBehaviors ()Ljava/util/Set;
	public final fun getMentionedUserIds ()Ljava/util/Set;
	public final fun getMentionedUsers ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionsEveryone ()Z
	public final fun getMessageReference ()Ldev/jombi/kordsb/core/entity/MessageReference;
	public final fun getReactions ()Ljava/util/Set;
	public fun getReactors (Ldev/jombi/kordsb/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public final fun getReferencedMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public final fun getStickers ()Ljava/util/List;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTts ()Z
	public final fun getType ()Ldev/jombi/kordsb/common/entity/MessageType;
	public final fun getWebhookId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isPinned ()Z
	public fun pin (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun publish (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun unpin (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Message;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/Message$Interaction : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/MessageInteractionData;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Message$Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/MessageReference : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/MessageReferenceData;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
}

public final class dev/jombi/kordsb/core/entity/PartialApplication : dev/jombi/kordsb/core/entity/BaseApplication {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getData ()Ldev/jombi/kordsb/core/cache/data/BaseApplicationData;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/PartialApplicationData;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/BaseApplication;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/PartialApplication;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/PartialGuild : dev/jombi/kordsb/core/behavior/GuildBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/PartialGuildData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createSticker (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/jombi/kordsb/rest/NamedFile;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editMFALevel (Ldev/jombi/kordsb/common/entity/MFALevel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editSelfNickname (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editWelcomeScreen (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public fun getBan (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBanner (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBannerUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public fun getBans ()Lkotlinx/coroutines/flow/Flow;
	public fun getCachedThreads ()Lkotlinx/coroutines/flow/Flow;
	public fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/PartialGuildData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDiscoverySplashUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public fun getEmojis ()Lkotlinx/coroutines/flow/Flow;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIcon (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIconHash ()Ljava/lang/String;
	public final fun getIconUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getIntegrations ()Lkotlinx/coroutines/flow/Flow;
	public fun getInvite (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInviteOrNull (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMembers (Ljava/lang/String;I)Lkotlinx/coroutines/flow/Flow;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfw ()Ldev/jombi/kordsb/common/entity/NsfwLevel;
	public final fun getOwner ()Ljava/lang/Boolean;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getPresences ()Lkotlinx/coroutines/flow/Flow;
	public fun getPreview (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPreviewOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPruneCount (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getSplashHash ()Ljava/lang/String;
	public fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickers ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates ()Lkotlinx/coroutines/flow/Flow;
	public final fun getVanityCode ()Ljava/lang/String;
	public final fun getVanityUrl ()Ljava/lang/String;
	public fun getVanityUrl (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getVerificationLevel ()Ldev/jombi/kordsb/common/entity/VerificationLevel;
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public final fun getWelcomeScreen ()Ldev/jombi/kordsb/core/entity/WelcomeScreen;
	public fun getWelcomeScreen (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWelcomeScreenOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWidget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWidgetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public fun kick (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun modifySelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun prune (ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun unban (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/PartialGuild;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public class dev/jombi/kordsb/core/entity/PermissionOverwrite {
	public static final field Companion Ldev/jombi/kordsb/core/entity/PermissionOverwrite$Companion;
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowed ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;
	public final fun getDenied ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getTarget ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/OverwriteType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/PermissionOverwrite$Companion {
	public final fun forEveryone (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
	public static synthetic fun forEveryone$default (Ldev/jombi/kordsb/core/entity/PermissionOverwrite$Companion;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
	public final fun forMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
	public static synthetic fun forMember$default (Ldev/jombi/kordsb/core/entity/PermissionOverwrite$Companion;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
	public final fun forRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
	public static synthetic fun forRole$default (Ldev/jombi/kordsb/core/entity/PermissionOverwrite$Companion;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Permissions;Ldev/jombi/kordsb/common/entity/Permissions;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/PermissionOverwrite;
}

public final class dev/jombi/kordsb/core/entity/PermissionOverwriteEntity : dev/jombi/kordsb/core/entity/PermissionOverwrite, dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/cache/data/PermissionOverwriteData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/Presence : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/PresenceData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/PresenceData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getActivities ()Ljava/util/List;
	public final fun getClientStatus ()Ldev/jombi/kordsb/core/entity/ClientStatus;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/PresenceData;
	public final synthetic fun getGame ()Ldev/jombi/kordsb/core/entity/Activity;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final synthetic fun getRoleIds ()Ljava/util/Set;
	public final synthetic fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getStatus ()Ldev/jombi/kordsb/common/entity/PresenceStatus;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Presence;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/Reaction : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ReactionData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun getCount ()I
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ReactionData;
	public final fun getEmoji ()Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getSelfReacted ()Z
	public final fun isAnimated ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/jombi/kordsb/core/entity/ReactionEmoji {
	public static final field Companion Ldev/jombi/kordsb/core/entity/ReactionEmoji$Companion;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getUrlFormat ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/ReactionEmoji$Companion {
	public final fun from (Ldev/jombi/kordsb/core/cache/data/RemovedReactionData;)Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public final fun from (Ldev/jombi/kordsb/core/entity/GuildEmoji;)Ldev/jombi/kordsb/core/entity/ReactionEmoji$Custom;
}

public final class dev/jombi/kordsb/core/entity/ReactionEmoji$Custom : dev/jombi/kordsb/core/entity/ReactionEmoji {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Z)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Z)Ldev/jombi/kordsb/core/entity/ReactionEmoji$Custom;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/ReactionEmoji$Custom;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;ZILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/ReactionEmoji$Custom;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getUrlFormat ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/ReactionEmoji$Unicode : dev/jombi/kordsb/core/entity/ReactionEmoji {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Ldev/jombi/kordsb/core/entity/ReactionEmoji$Unicode;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/ReactionEmoji$Unicode;Ljava/lang/String;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/ReactionEmoji$Unicode;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getUrlFormat ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Region : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/RegionData;Ldev/jombi/kordsb/core/Kord;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/RegionData;
	public final fun getId ()Ljava/lang/String;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isCustom ()Z
	public final fun isDeprecated ()Z
	public final fun isOptimal ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Role : dev/jombi/kordsb/core/behavior/RoleBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/RoleData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/RoleData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun changePosition (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/RoleData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/RoleData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/Role;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Role;Ldev/jombi/kordsb/core/cache/data/RoleData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Role;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getColor ()Ldev/jombi/kordsb/common/Color;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/RoleData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getHoisted ()Z
	public final fun getIcon ()Ldev/jombi/kordsb/core/entity/Icon;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getManaged ()Z
	public fun getMention ()Ljava/lang/String;
	public final fun getMentionable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRawPosition ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTags ()Ldev/jombi/kordsb/core/entity/RoleTags;
	public final fun getUnicodeEmoji ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/RoleBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Role;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/RoleTags : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/RoleTagsData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/RoleTagsData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBot (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBotId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/RoleTagsData;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIntegration (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIntegrationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun isPremiumRole ()Z
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/StageInstance : dev/jombi/kordsb/core/behavior/StageInstanceBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/StageInstanceData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/StageInstanceData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/StageInstanceData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getPrivacyLevel ()Ldev/jombi/kordsb/common/entity/StageInstancePrivacyLevel;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTopic ()Ljava/lang/String;
	public fun update (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/StageInstanceBehavior;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/StageInstance;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public class dev/jombi/kordsb/core/entity/Sticker : dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerData;Ldev/jombi/kordsb/core/Kord;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getAvailable ()Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/StickerData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFormatType ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getSortValue ()Ljava/lang/Integer;
	public final fun getTags ()Ljava/util/List;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
}

public final class dev/jombi/kordsb/core/entity/StickerItem : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerItemData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerItemData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/StickerItemData;
	public final fun getFormatType ()Ldev/jombi/kordsb/common/entity/MessageStickerType;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getSticker (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getStickerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/StickerPack : dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/StickerPackData;Ldev/jombi/kordsb/core/Kord;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getCoverStickerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/StickerPackData;
	public final fun getDescription ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getSkuId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getStickers ()Ljava/util/List;
}

public abstract interface class dev/jombi/kordsb/core/entity/Strategizable {
	public abstract fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/Team : dev/jombi/kordsb/core/entity/KordEntity, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/TeamData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/TeamData;
	public final fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMembers ()Ljava/util/List;
	public final fun getOwnerUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNUll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Team;
}

public final class dev/jombi/kordsb/core/entity/TeamMember {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/TeamMemberData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/TeamMemberData;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMembershipState ()Ldev/jombi/kordsb/common/entity/TeamMembershipState;
	public final fun getPermissions ()Ljava/util/List;
	public final fun getTeamId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/Template : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/behavior/TemplateBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/TemplateData;Ldev/jombi/kordsb/core/Kord;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getCreator ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getCreatorId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/TemplateData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDirty ()Ljava/lang/Boolean;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getPartialGuild ()Ldev/jombi/kordsb/core/entity/PartialGuild;
	public final fun getUpdatedAt ()Lkotlinx/datetime/Instant;
	public final fun getUsageCount ()I
	public fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/jombi/kordsb/core/entity/User : dev/jombi/kordsb/core/behavior/UserBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAccentColor ()Ldev/jombi/kordsb/common/Color;
	public final fun getAvatar ()Ldev/jombi/kordsb/core/entity/Icon;
	public final fun getBannerUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun getDefaultAvatar ()Ldev/jombi/kordsb/core/entity/Icon;
	public final fun getDiscriminator ()Ljava/lang/String;
	public fun getDmChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getDmChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final synthetic fun getFlags ()Ldev/jombi/kordsb/common/entity/UserFlags;
	public static fun getFlags$delegate (Ldev/jombi/kordsb/core/entity/User;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public final synthetic fun getPremiumType ()Ldev/jombi/kordsb/common/entity/UserPremium;
	public final fun getPublicFlags ()Ldev/jombi/kordsb/common/entity/UserFlags;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTag ()Ljava/lang/String;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isBot ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/User;
}

public final class dev/jombi/kordsb/core/entity/User$Avatar : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/User$Avatar;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/User$Avatar;Ldev/jombi/kordsb/core/cache/data/UserData;Ldev/jombi/kordsb/core/Kord;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/User$Avatar;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/UserData;
	public final fun getDefaultImage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDefaultUrl ()Ljava/lang/String;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Format;Ldev/jombi/kordsb/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/jombi/kordsb/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getSupportedFormat ()Ldev/jombi/kordsb/rest/Image$Format;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getUrl (Ldev/jombi/kordsb/rest/Image$Format;)Ljava/lang/String;
	public final fun getUrl (Ldev/jombi/kordsb/rest/Image$Format;Ldev/jombi/kordsb/rest/Image$Size;)Ljava/lang/String;
	public final fun getUrl (Ldev/jombi/kordsb/rest/Image$Size;)Ljava/lang/String;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public final fun isCustom ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/VoiceState : dev/jombi/kordsb/core/KordObject, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/VoiceStateData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/VoiceStateData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final synthetic fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/VoiceStateData;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRequestToSpeakTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getSessionId ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun isDeafened ()Z
	public final fun isMuted ()Z
	public final fun isSelfDeafened ()Z
	public final fun isSelfMuted ()Z
	public final synthetic fun isSelfSteaming ()Z
	public final fun isSelfStreaming ()Z
	public final fun isSelfVideo ()Z
	public final fun isSuppressed ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/VoiceState;
}

public final class dev/jombi/kordsb/core/entity/Webhook : dev/jombi/kordsb/core/behavior/WebhookBehavior, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/WebhookData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/WebhookData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/WebhookData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/Webhook;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/Webhook;Ldev/jombi/kordsb/core/cache/data/WebhookData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/Webhook;
	public fun delete (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCreatorId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/WebhookData;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final synthetic fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMessage (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/WebhookType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/WebhookBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Webhook;
}

public final class dev/jombi/kordsb/core/entity/WelcomeScreen : dev/jombi/kordsb/core/KordObject {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;Ldev/jombi/kordsb/core/Kord;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/WelcomeScreenData;
	public final fun getDescription ()Ljava/lang/String;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getWelcomeScreenChannels ()Ljava/util/List;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/ApplicationCommand : dev/jombi/kordsb/core/behavior/ApplicationCommandBehavior {
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public abstract fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public abstract fun getDefaultPermission ()Ljava/lang/Boolean;
	public abstract fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNameLocalizations ()Ljava/util/Map;
	public abstract fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public abstract fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/ApplicationCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ljava/lang/Boolean;
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/ApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/ApplicationCommandKt {
	public static final fun GlobalApplicationCommand (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;
	public static final fun GuildApplicationCommand (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
}

public final class dev/jombi/kordsb/core/entity/application/ApplicationCommandParameter {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;)V
	public final fun getChannelTypes ()Ljava/util/List;
	public final fun getChoices ()Ljava/util/Map;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandParameterData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun isRequired ()Z
}

public final class dev/jombi/kordsb/core/entity/application/ApplicationCommandPermissions {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;)V
	public final fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionsData;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPermissions ()Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/ChatInputCommandCommand : dev/jombi/kordsb/core/behavior/ChatInputCommandBehavior, dev/jombi/kordsb/core/entity/application/ApplicationCommand {
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getDescriptionLocalizations ()Ljava/util/Map;
	public abstract fun getGroups ()Ljava/util/Map;
	public abstract fun getSubCommands ()Ljava/util/Map;
}

public final class dev/jombi/kordsb/core/entity/application/ChatInputCommandCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/lang/Boolean;
	public static fun getDescription (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/lang/String;
	public static fun getDescriptionLocalizations (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/util/Map;
	public static fun getGroups (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/util/Map;
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/util/Map;
	public static fun getSubCommands (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/ChatInputCommandCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/ChatInputGroup {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandGroupData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSubcommands ()Ljava/util/Map;
}

public final class dev/jombi/kordsb/core/entity/application/ChatInputSubCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandSubcommandData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getParameters ()Ljava/util/Map;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand : dev/jombi/kordsb/core/behavior/GlobalApplicationCommandBehavior, dev/jombi/kordsb/core/entity/application/ApplicationCommand {
	public abstract fun getDmPermission ()Z
}

public final class dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ljava/lang/Boolean;
	public static fun getDmPermission (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Z
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/GlobalApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GlobalChatInputCommand : dev/jombi/kordsb/core/behavior/GlobalChatInputCommandBehavior, dev/jombi/kordsb/core/entity/application/ChatInputCommandCommand, dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getDescription ()Ljava/lang/String;
	public fun getDescriptionLocalizations ()Ljava/util/Map;
	public fun getDmPermission ()Z
	public fun getGroups ()Ljava/util/Map;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getSubCommands ()Ljava/util/Map;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GlobalMessageCommand : dev/jombi/kordsb/core/behavior/GlobalMessageCommandBehavior, dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand, dev/jombi/kordsb/core/entity/application/MessageCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getDmPermission ()Z
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GlobalUserCommand : dev/jombi/kordsb/core/behavior/GlobalUserCommandBehavior, dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand, dev/jombi/kordsb/core/entity/application/UserCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getDmPermission ()Z
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/GuildApplicationCommand : dev/jombi/kordsb/core/behavior/GuildApplicationCommandBehavior, dev/jombi/kordsb/core/entity/application/ApplicationCommand {
}

public final class dev/jombi/kordsb/core/entity/application/GuildApplicationCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ljava/lang/Boolean;
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GuildApplicationCommandPermission {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/GuildApplicationCommandPermissionData;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getPermission ()Z
	public final fun getType ()Ldev/jombi/kordsb/common/entity/DiscordGuildApplicationCommandPermission$Type;
}

public final class dev/jombi/kordsb/core/entity/application/GuildChatInputCommand : dev/jombi/kordsb/core/behavior/GuildChatInputCommandBehavior, dev/jombi/kordsb/core/entity/application/ChatInputCommandCommand, dev/jombi/kordsb/core/entity/application/GuildApplicationCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getDescription ()Ljava/lang/String;
	public fun getDescriptionLocalizations ()Ljava/util/Map;
	public fun getGroups ()Ljava/util/Map;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getSubCommands ()Ljava/util/Map;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GuildMessageCommand : dev/jombi/kordsb/core/behavior/GuildMessageCommandBehavior, dev/jombi/kordsb/core/entity/application/GuildApplicationCommand, dev/jombi/kordsb/core/entity/application/MessageCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/GuildUserCommand : dev/jombi/kordsb/core/behavior/GuildUserCommandBehavior, dev/jombi/kordsb/core/entity/application/GuildApplicationCommand, dev/jombi/kordsb/core/entity/application/UserCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/MessageCommand : dev/jombi/kordsb/core/behavior/MessageCommandBehavior, dev/jombi/kordsb/core/entity/application/ApplicationCommand {
}

public final class dev/jombi/kordsb/core/entity/application/MessageCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/MessageCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ljava/lang/Boolean;
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/MessageCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/UnknownGlobalApplicationCommand : dev/jombi/kordsb/core/entity/application/GlobalApplicationCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getDmPermission ()Z
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand : dev/jombi/kordsb/core/entity/application/GuildApplicationCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;Ldev/jombi/kordsb/rest/service/InteractionService;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationCommandData;
	public fun getDefaultMemberPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getDefaultPermission ()Ljava/lang/Boolean;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ljava/util/Map;
	public fun getService ()Ldev/jombi/kordsb/rest/service/InteractionService;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getVersion ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public abstract interface class dev/jombi/kordsb/core/entity/application/UserCommand : dev/jombi/kordsb/core/behavior/UserCommandBehavior, dev/jombi/kordsb/core/entity/application/ApplicationCommand {
}

public final class dev/jombi/kordsb/core/entity/application/UserCommand$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/application/UserCommand;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getDefaultMemberPermissions (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getDefaultPermission (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ljava/lang/Boolean;
	public static fun getId (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getName (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ljava/lang/String;
	public static fun getNameLocalizations (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ljava/util/Map;
	public static fun getType (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/application/UserCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/CategorizableChannel : dev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior, dev/jombi/kordsb/core/entity/channel/TopGuildChannel {
	public abstract fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public abstract fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/CategorizableChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCategory (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public static fun getCategoryId (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getEffectivePermissions (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvites (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ljava/lang/String;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPosition (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)I
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
}

public final class dev/jombi/kordsb/core/entity/channel/Category : dev/jombi/kordsb/core/behavior/channel/CategoryBehavior, dev/jombi/kordsb/core/entity/channel/TopGuildChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/Channel : dev/jombi/kordsb/core/behavior/channel/ChannelBehavior {
	public static final field Companion Ldev/jombi/kordsb/core/entity/channel/Channel$Companion;
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public abstract fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/entity/channel/Channel$Companion {
	public final fun from (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public static synthetic fun from$default (Ldev/jombi/kordsb/core/entity/channel/Channel$Companion;Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/entity/channel/Channel$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/Channel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/Channel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/Channel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/Channel;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/Channel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun withStrategy (Ldev/jombi/kordsb/core/entity/channel/Channel;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/entity/channel/DmChannel : dev/jombi/kordsb/core/entity/channel/MessageChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRecipientBehaviors ()Ljava/util/Set;
	public final fun getRecipientIds ()Ljava/util/Set;
	public final fun getRecipients ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/GuildChannel : dev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior, dev/jombi/kordsb/core/entity/channel/Channel {
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/GuildChannel$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ljava/lang/String;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/GuildChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/GuildMessageChannel : dev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior, dev/jombi/kordsb/core/entity/channel/GuildChannel, dev/jombi/kordsb/core/entity/channel/MessageChannel {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/GuildMessageChannel$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static synthetic fun getLastPinTimeStamp (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getLastPinTimestamp (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ljava/lang/String;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun type (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/MessageChannel : dev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior, dev/jombi/kordsb/core/entity/channel/Channel {
	public abstract fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public abstract fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public abstract fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/MessageChannel$DefaultImpls {
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static synthetic fun getLastPinTimeStamp (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getLastPinTimestamp (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun type (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/MessageChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/entity/channel/NewsChannel : dev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior, dev/jombi/kordsb/core/entity/channel/CategorizableChannel, dev/jombi/kordsb/core/entity/channel/ThreadParentChannel, dev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun follow (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPublicArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTopic ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun startPublicThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startPublicThreadWithMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/NewsChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/NewsChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/ResolvedChannel : dev/jombi/kordsb/core/entity/channel/Channel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public final fun getStrategy ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/entity/channel/StageChannel : dev/jombi/kordsb/core/behavior/channel/StageChannelBehavior, dev/jombi/kordsb/core/entity/channel/CategorizableChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public synthetic fun createStageInstance (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBitrate ()I
	public fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public final fun getUserLimit ()I
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/StageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/StoreChannel : dev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior, dev/jombi/kordsb/core/entity/channel/CategorizableChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/entity/channel/StoreChannel;Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/StoreChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/TextChannel : dev/jombi/kordsb/core/behavior/channel/TextChannelBehavior, dev/jombi/kordsb/core/entity/channel/CategorizableChannel, dev/jombi/kordsb/core/entity/channel/ThreadParentChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getActiveThreads ()Lkotlinx/coroutines/flow/Flow;
	public fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPrivateArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getPublicArchivedThreads (Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTopic ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public final fun getUserRateLimit-FghU774 ()Lkotlin/time/Duration;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public final fun isNsfw ()Z
	public fun startPrivateThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startPublicThread (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startPublicThreadWithMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/ArchiveDuration;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TextChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TextChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/ThreadParentChannel : dev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior, dev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/ThreadParentChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActiveThreads (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getCategory (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public static fun getCategoryId (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getEffectivePermissions (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvites (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static synthetic fun getLastPinTimeStamp (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/datetime/Instant;
	public static fun getLastPinTimestamp (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPublicArchivedThreads (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRawPosition (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)I
	public static fun getTopic (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/ThreadParentChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/TopGuildChannel : dev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior, dev/jombi/kordsb/core/entity/channel/GuildChannel {
	public abstract fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getPermissionOverwrites ()Ljava/util/Set;
	public abstract fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public abstract fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public abstract fun getRawPosition ()I
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/TopGuildChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getEffectivePermissions (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ljava/lang/String;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPosition (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)I
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel : dev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior, dev/jombi/kordsb/core/entity/channel/CategorizableChannel, dev/jombi/kordsb/core/entity/channel/GuildMessageChannel {
	public abstract fun getTopic ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCategory (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public static fun getCategoryId (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getEffectivePermissions (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvites (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static synthetic fun getLastPinTimeStamp (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getLastPinTimestamp (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)I
	public static fun getTopic (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun getWebhooks (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/entity/channel/VoiceChannel : dev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior, dev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/jombi/kordsb/core/entity/PermissionOverwrite;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBitrate ()I
	public fun getCategory ()Ldev/jombi/kordsb/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/jombi/kordsb/common/entity/Snowflake;)Ldev/jombi/kordsb/core/entity/PermissionOverwriteEntity;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public final fun getRegion (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRegionOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRtcRegion ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTopic ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public final fun getUserLimit ()I
	public final fun getVideoQualityMode ()Ldev/jombi/kordsb/common/entity/VideoQualityMode;
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/CategorizableChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/VoiceChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/CategorizableChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/WelcomeScreenChannel : dev/jombi/kordsb/core/behavior/channel/ChannelBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/WelcomeScreenChannelData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmojiId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel : dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getParent ()Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public final fun getParent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getParentId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getParentOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread : dev/jombi/kordsb/core/entity/channel/thread/ThreadChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getArchiveTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getArchiveTimestamp ()Lkotlinx/datetime/Instant;
	public fun getAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public fun getCreateTimestamp ()Lkotlinx/datetime/Instant;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getDefaultAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMember ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
	public fun getMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getOwner ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getParent ()Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public fun getParent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getParentId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getParentOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getRateLimitPerUser-FghU774 ()Lkotlin/time/Duration;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun isArchived ()Z
	public fun isLocked ()Z
	public fun isNsfw ()Z
	public fun join (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun removeUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/thread/TextChannelThread : dev/jombi/kordsb/core/entity/channel/thread/ThreadChannel {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ChannelData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getArchiveTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getArchiveTimestamp ()Lkotlinx/datetime/Instant;
	public fun getAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public fun getCreateTimestamp ()Lkotlinx/datetime/Instant;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChannelData;
	public fun getDefaultAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLastMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getLastPinTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getMember ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
	public fun getMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getOwner ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getParent ()Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public fun getParent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getParentId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getParentOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getRateLimitPerUser-FghU774 ()Lkotlin/time/Duration;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ChannelType;
	public fun isArchived ()Z
	public final fun isInvitable ()Z
	public fun isLocked ()Z
	public fun isNsfw ()Z
	public final fun isPrivate ()Z
	public fun join (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun removeUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public abstract interface class dev/jombi/kordsb/core/entity/channel/thread/ThreadChannel : dev/jombi/kordsb/core/behavior/channel/threads/ThreadChannelBehavior, dev/jombi/kordsb/core/entity/channel/GuildMessageChannel {
	public abstract synthetic fun getArchiveTimeStamp ()Lkotlinx/datetime/Instant;
	public abstract fun getArchiveTimestamp ()Lkotlinx/datetime/Instant;
	public abstract fun getAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public abstract fun getCreateTimestamp ()Lkotlinx/datetime/Instant;
	public abstract fun getDefaultAutoArchiveDuration ()Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public abstract fun getMember ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
	public abstract fun getMemberCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getMessageCount ()Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public abstract fun getOwner ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public abstract fun getOwnerId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getParentId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getRateLimitPerUser-FghU774 ()Lkotlin/time/Duration;
	public abstract fun isArchived ()Z
	public abstract fun isLocked ()Z
	public abstract fun isNsfw ()Z
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/thread/ThreadChannel$DefaultImpls {
	public static fun addUser (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/Iterable;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun createMessage (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannel (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun fetchChannelOrNull (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getArchiveTimeStamp (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/datetime/Instant;
	public static fun getArchiveTimestamp (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/datetime/Instant;
	public static fun getAutoArchiveDuration (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public static fun getCreateTimestamp (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/datetime/Instant;
	public static fun getDefaultAutoArchiveDuration (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/ArchiveDuration;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static synthetic fun getLastPinTimeStamp (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/datetime/Instant;
	public static fun getLastPinTimestamp (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/datetime/Instant;
	public static fun getMember (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
	public static fun getMemberCount (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public static fun getMembers (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageCount (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/optional/OptionalInt;
	public static fun getMessageOrNull (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static fun getName (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ljava/lang/String;
	public static fun getOwner (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public static fun getOwnerId (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getParent (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/core/behavior/channel/threads/ThreadParentChannelBehavior;
	public static fun getParent (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getParentId (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getParentOrNull (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPinnedMessages (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRateLimitPerUser-FghU774 (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Lkotlin/time/Duration;
	public static fun getType (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Ldev/jombi/kordsb/common/entity/ChannelType;
	public static fun isArchived (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Z
	public static fun isLocked (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Z
	public static fun isNsfw (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;)Z
	public static fun join (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun leave (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun removeUser (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun type (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/entity/channel/thread/ThreadMember : dev/jombi/kordsb/core/behavior/ThreadMemberBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun fetchMember (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fetchUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ThreadMemberData;
	public fun getDmChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getDmChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFlags ()I
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getJoinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getThread (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getThreadId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getThreadOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
}

public final class dev/jombi/kordsb/core/entity/component/ActionRowComponent : dev/jombi/kordsb/core/entity/component/Component {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ComponentData;)V
	public final fun getComponents ()Ljava/util/List;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public final fun getInteractionButtons ()Ljava/util/Map;
	public final fun getLinkButtons ()Ljava/util/List;
	public final fun getSelectMenus ()Ljava/util/Map;
	public final fun getTextInputs ()Ljava/util/Map;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType$ActionRow;
	public synthetic fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/component/ButtonComponent : dev/jombi/kordsb/core/entity/component/Component {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ChatComponentData;)V
	public final fun getCustomId ()Ljava/lang/String;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ChatComponentData;
	public synthetic fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public final fun getDisabled ()Z
	public final fun getEmoji ()Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getStyle ()Ldev/jombi/kordsb/common/entity/ButtonStyle;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType$Button;
	public synthetic fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public final fun getUrl ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/component/Component {
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public abstract fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
}

public final class dev/jombi/kordsb/core/entity/component/Component$DefaultImpls {
	public static fun getType (Ldev/jombi/kordsb/core/entity/component/Component;)Ldev/jombi/kordsb/common/entity/ComponentType;
}

public final class dev/jombi/kordsb/core/entity/component/ComponentKt {
	public static final fun Component (Ldev/jombi/kordsb/core/cache/data/ComponentData;)Ldev/jombi/kordsb/core/entity/component/Component;
}

public final class dev/jombi/kordsb/core/entity/component/SelectMenuComponent : dev/jombi/kordsb/core/entity/component/Component {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ComponentData;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomId ()Ljava/lang/String;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public final fun getDisabled ()Z
	public final fun getMaxValues ()I
	public final fun getMinValues ()I
	public final fun getOptions ()Ljava/util/List;
	public final fun getPlaceholder ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType$SelectMenu;
	public synthetic fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/component/SelectOption {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/SelectOptionData;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/SelectOptionData;
	public final fun getDefault ()Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmoji ()Ldev/jombi/kordsb/common/entity/DiscordPartialEmoji;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/component/TextInputComponent : dev/jombi/kordsb/core/entity/component/Component {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;)V
	public final fun getCustomId ()Ljava/lang/String;
	public synthetic fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/TextInputComponentData;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getMaxLength ()Ljava/lang/Integer;
	public final fun getMinLength ()Ljava/lang/Integer;
	public final fun getPlaceholder ()Ljava/lang/String;
	public final fun getRequired ()Z
	public final fun getStyle ()Ldev/jombi/kordsb/common/entity/TextInputStyle;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType$TextInput;
	public synthetic fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public final fun getValue ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/component/UnknownComponent : dev/jombi/kordsb/core/entity/component/Component {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ComponentData;)V
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ComponentData;
	public fun getType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ActionInteraction : dev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/Interaction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ActionInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction : dev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/ActionInteraction {
	public abstract fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getInvokedCommandName ()Ljava/lang/String;
	public abstract fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public abstract fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteractionKt {
	public static final fun GlobalApplicationCommandInteraction (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public static synthetic fun GlobalApplicationCommandInteraction$default (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public static final fun GuildApplicationCommandInteraction (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public static synthetic fun GuildApplicationCommandInteraction$default (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/AttachmentOptionValue : dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/Attachment;)V
	public fun getFocused ()Z
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Attachment;
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction : dev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/DataInteraction {
	public abstract fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public abstract fun getFocusedOption ()Ldev/jombi/kordsb/core/entity/interaction/StringOptionValue;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCommand (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public static fun getFocusedOption (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/core/entity/interaction/StringOptionValue;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/BooleanOptionValue : dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public fun <init> (ZZ)V
	public fun getFocused ()Z
	public fun getValue ()Ljava/lang/Boolean;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ButtonInteraction : dev/jombi/kordsb/core/entity/interaction/ComponentInteraction {
	public abstract fun getComponent ()Ldev/jombi/kordsb/core/entity/component/ButtonComponent;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ButtonInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getComponent (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/core/entity/component/ButtonComponent;
	public static fun getComponentId (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ljava/lang/String;
	public static fun getComponentType (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/entity/ComponentType;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/ChannelOptionValue : dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/channel/ResolvedChannel;)V
	public fun getFocused ()Z
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/channel/ResolvedChannel;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction {
	public abstract fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCommand (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ComponentInteraction : dev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior, dev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/ActionInteraction {
	public abstract fun getComponent ()Ldev/jombi/kordsb/core/entity/component/Component;
	public abstract fun getComponentId ()Ljava/lang/String;
	public abstract fun getComponentType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public abstract fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ComponentInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getComponentId (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ljava/lang/String;
	public static fun getComponentType (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/entity/ComponentType;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/ComponentInteractionKt {
	public static final fun ComponentInteraction (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public static synthetic fun ComponentInteraction$default (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/DataInteraction : dev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/Interaction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/DataInteraction$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/GlobalInteraction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)Ldev/jombi/kordsb/core/entity/User;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;)I
	public static fun withStrategy (Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalAutoCompleteInteraction : dev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction, dev/jombi/kordsb/core/entity/interaction/GlobalInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getFocusedOption ()Ldev/jombi/kordsb/core/entity/interaction/StringOptionValue;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalAutoCompleteInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalButtonInteraction : dev/jombi/kordsb/core/entity/interaction/ButtonInteraction, dev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getComponent ()Ldev/jombi/kordsb/core/entity/component/ButtonComponent;
	public synthetic fun getComponent ()Ldev/jombi/kordsb/core/entity/component/Component;
	public fun getComponentId ()Ljava/lang/String;
	public fun getComponentType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalButtonInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalChatInputCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction, dev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalChatInputCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction : dev/jombi/kordsb/core/entity/interaction/ComponentInteraction, dev/jombi/kordsb/core/entity/interaction/GlobalInteraction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getComponentId (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ljava/lang/String;
	public static fun getComponentType (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/entity/ComponentType;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)Ldev/jombi/kordsb/core/entity/User;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GlobalInteraction : dev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/Interaction {
	public abstract fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalInteraction$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)Ldev/jombi/kordsb/core/entity/User;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalMessageCommandInteraction : dev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessages ()Ljava/util/Map;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTarget ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalMessageCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalModalSubmitInteraction : dev/jombi/kordsb/core/entity/interaction/GlobalInteraction, dev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getActionRows ()Ljava/util/List;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getModalId ()Ljava/lang/String;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTextInputs ()Ljava/util/Map;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalModalSubmitInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalSelectMenuInteraction : dev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction, dev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getComponent ()Ldev/jombi/kordsb/core/entity/component/Component;
	public fun getComponent ()Ldev/jombi/kordsb/core/entity/component/SelectMenuComponent;
	public fun getComponentId ()Ljava/lang/String;
	public fun getComponentType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getValues ()Ljava/util/List;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalSelectMenuInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GlobalUserCommandInteraction : dev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/UserCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTarget ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getUsers ()Ljava/util/Map;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GlobalInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GlobalUserCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GroupCommand : dev/jombi/kordsb/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/core/Kord;)V
	public fun getAttachments ()Ljava/util/Map;
	public fun getBooleans ()Ljava/util/Map;
	public fun getChannels ()Ljava/util/Map;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public final fun getGroupName ()Ljava/lang/String;
	public fun getIntegers ()Ljava/util/Map;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMembers ()Ljava/util/Map;
	public fun getMentionables ()Ljava/util/Map;
	public final fun getName ()Ljava/lang/String;
	public fun getNumbers ()Ljava/util/Map;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getRoles ()Ljava/util/Map;
	public fun getRootId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
	public fun getStrings ()Ljava/util/Map;
	public fun getUsers ()Ljava/util/Map;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/GuildInteraction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getAppPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildBehavior (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)Ldev/jombi/kordsb/core/entity/Member;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;)I
	public static fun withStrategy (Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildAutoCompleteInteraction : dev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction, dev/jombi/kordsb/core/entity/interaction/GuildInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getFocusedOption ()Ldev/jombi/kordsb/core/entity/interaction/StringOptionValue;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/AutoCompleteInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/DataInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildAutoCompleteInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildButtonInteraction : dev/jombi/kordsb/core/entity/interaction/ButtonInteraction, dev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getComponent ()Ldev/jombi/kordsb/core/entity/component/ButtonComponent;
	public synthetic fun getComponent ()Ldev/jombi/kordsb/core/entity/component/Component;
	public fun getComponentId ()Ljava/lang/String;
	public fun getComponentType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildButtonInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildChatInputCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction, dev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildChatInputCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction : dev/jombi/kordsb/core/entity/interaction/ComponentInteraction, dev/jombi/kordsb/core/entity/interaction/GuildInteraction {
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getAppPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getComponentId (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ljava/lang/String;
	public static fun getComponentType (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/ComponentType;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildBehavior (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)Ldev/jombi/kordsb/core/entity/Member;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/GuildInteraction : dev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/Interaction {
	public abstract fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public abstract fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildInteraction$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getAppPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildBehavior (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public static fun getGuildId (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getPermissions (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/Permissions;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUser (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)Ldev/jombi/kordsb/core/entity/Member;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildMessageCommandInteraction : dev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessages ()Ljava/util/Map;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTarget ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildMessageCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildModalSubmitInteraction : dev/jombi/kordsb/core/entity/interaction/GuildInteraction, dev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getActionRows ()Ljava/util/List;
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getModalId ()Ljava/lang/String;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTextInputs ()Ljava/util/Map;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildModalSubmitInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildSelectMenuInteraction : dev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction, dev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getComponent ()Ldev/jombi/kordsb/core/entity/component/Component;
	public fun getComponent ()Ldev/jombi/kordsb/core/entity/component/SelectMenuComponent;
	public fun getComponentId ()Ljava/lang/String;
	public fun getComponentType ()Ldev/jombi/kordsb/common/entity/ComponentType;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getValues ()Ljava/util/List;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildSelectMenuInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/GuildUserCommandInteraction : dev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction, dev/jombi/kordsb/core/entity/interaction/UserCommandInteraction {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun deferEphemeralMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferEphemeralResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deferPublicResponseUnsafe (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAppPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getGuildBehavior ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getInvokedCommandName ()Ljava/lang/String;
	public fun getInvokedCommandType ()Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public fun getOriginalInteractionResponse (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getOriginalInteractionResponseOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPermissions ()Ldev/jombi/kordsb/common/entity/Permissions;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getTarget ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public fun getUser ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun getUsers ()Ljava/util/Map;
	public fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ActionInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ApplicationCommandInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/GuildInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/ModalParentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildInteraction;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/GuildUserCommandInteraction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/IntegerOptionValue : dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public fun <init> (JZ)V
	public fun getFocused ()Z
	public fun getValue ()Ljava/lang/Long;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/Interaction : dev/jombi/kordsb/core/behavior/interaction/InteractionBehavior {
	public static final field Companion Ldev/jombi/kordsb/core/entity/interaction/Interaction$Companion;
	public abstract fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/InteractionData;
	public abstract fun getGuildLocale ()Ldev/jombi/kordsb/common/Locale;
	public abstract fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getLocale ()Ldev/jombi/kordsb/common/Locale;
	public abstract fun getToken ()Ljava/lang/String;
	public abstract fun getType ()Ldev/jombi/kordsb/common/entity/InteractionType;
	public abstract fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public abstract fun getVersion ()I
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/Interaction$Companion {
	public final fun from (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public static synthetic fun from$default (Ldev/jombi/kordsb/core/entity/interaction/Interaction$Companion;Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/entity/interaction/Interaction$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/Interaction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/Interaction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/Interaction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/Interaction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/InteractionCommand : dev/jombi/kordsb/core/KordObject {
	public abstract fun getAttachments ()Ljava/util/Map;
	public abstract fun getBooleans ()Ljava/util/Map;
	public abstract fun getChannels ()Ljava/util/Map;
	public abstract fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public abstract fun getIntegers ()Ljava/util/Map;
	public abstract fun getMembers ()Ljava/util/Map;
	public abstract fun getMentionables ()Ljava/util/Map;
	public abstract fun getNumbers ()Ljava/util/Map;
	public abstract fun getOptions ()Ljava/util/Map;
	public abstract fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public abstract fun getRoles ()Ljava/util/Map;
	public abstract fun getRootId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getRootName ()Ljava/lang/String;
	public abstract fun getStrings ()Ljava/util/Map;
	public abstract fun getUsers ()Ljava/util/Map;
}

public final class dev/jombi/kordsb/core/entity/interaction/InteractionCommand$DefaultImpls {
	public static fun getAttachments (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getBooleans (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getChannels (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getIntegers (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getMembers (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getMentionables (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getNumbers (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getRoles (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getRootId (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getRootName (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/lang/String;
	public static fun getStrings (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
	public static fun getUsers (Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;)Ljava/util/Map;
}

public final class dev/jombi/kordsb/core/entity/interaction/InteractionCommandKt {
	public static final fun InteractionCommand (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/interaction/InteractionCommand;
}

public final class dev/jombi/kordsb/core/entity/interaction/MemberOptionValue : dev/jombi/kordsb/core/entity/interaction/UserOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/Member;)V
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Member;
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/User;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/interaction/MentionableOptionValue : dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/Entity;)V
	public fun getFocused ()Z
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction {
	public abstract fun getMessages ()Ljava/util/Map;
	public abstract fun getTarget ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public abstract fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public abstract fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessages (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ljava/util/Map;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getTarget (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getTarget (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getTargetBehavior (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public static fun getTargetId (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getTargetOrNull (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;)I
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction : dev/jombi/kordsb/core/behavior/interaction/ComponentInteractionBehavior, dev/jombi/kordsb/core/entity/interaction/ActionInteraction {
	public abstract fun getActionRows ()Ljava/util/List;
	public abstract fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public abstract fun getModalId ()Ljava/lang/String;
	public abstract fun getTextInputs ()Ljava/util/Map;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getActionRows (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ljava/util/List;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getModalId (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ljava/lang/String;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTextInputs (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ljava/util/Map;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/ModalSubmitInteractionKt {
	public static final fun ModalSubmitInteraction (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
	public static synthetic fun ModalSubmitInteraction$default (Ldev/jombi/kordsb/core/cache/data/InteractionData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/NumberOptionValue : dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public fun <init> (DZ)V
	public fun getFocused ()Z
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public abstract fun getFocused ()Z
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/entity/interaction/OptionValueKt {
	public static final fun OptionValue (Ldev/jombi/kordsb/common/entity/CommandArgument;Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;)Ldev/jombi/kordsb/core/entity/interaction/OptionValue;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue : dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public abstract fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
}

public final class dev/jombi/kordsb/core/entity/interaction/ResolvedObjects {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAttachments ()Ljava/util/Map;
	public final fun getChannels ()Ljava/util/Map;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ResolvedObjectsData;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMembers ()Ljava/util/Map;
	public final fun getMessages ()Ljava/util/Map;
	public final fun getRoles ()Ljava/util/Map;
	public final fun getStrategy ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getUsers ()Ljava/util/Map;
}

public final class dev/jombi/kordsb/core/entity/interaction/RoleOptionValue : dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/Role;)V
	public fun getFocused ()Z
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Role;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/interaction/RootCommand : dev/jombi/kordsb/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/core/Kord;)V
	public fun getAttachments ()Ljava/util/Map;
	public fun getBooleans ()Ljava/util/Map;
	public fun getChannels ()Ljava/util/Map;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public fun getIntegers ()Ljava/util/Map;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMembers ()Ljava/util/Map;
	public fun getMentionables ()Ljava/util/Map;
	public fun getNumbers ()Ljava/util/Map;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getRoles ()Ljava/util/Map;
	public fun getRootId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
	public fun getStrings ()Ljava/util/Map;
	public fun getUsers ()Ljava/util/Map;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction : dev/jombi/kordsb/core/entity/interaction/ComponentInteraction {
	public abstract fun getComponent ()Ldev/jombi/kordsb/core/entity/component/SelectMenuComponent;
	public abstract fun getValues ()Ljava/util/List;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessageUpdate (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getComponent (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/core/entity/component/SelectMenuComponent;
	public static fun getComponentId (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ljava/lang/String;
	public static fun getComponentType (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/entity/ComponentType;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getMessage (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/core/entity/Message;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getValues (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)Ljava/util/List;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;)I
}

public final class dev/jombi/kordsb/core/entity/interaction/StringOptionValue : dev/jombi/kordsb/core/entity/interaction/OptionValue {
	public fun <init> (Ljava/lang/String;Z)V
	public fun getFocused ()Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/interaction/SubCommand : dev/jombi/kordsb/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;Ldev/jombi/kordsb/core/Kord;)V
	public fun getAttachments ()Ljava/util/Map;
	public fun getBooleans ()Ljava/util/Map;
	public fun getChannels ()Ljava/util/Map;
	public fun getData ()Ldev/jombi/kordsb/core/cache/data/ApplicationInteractionData;
	public fun getIntegers ()Ljava/util/Map;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMembers ()Ljava/util/Map;
	public fun getMentionables ()Ljava/util/Map;
	public final fun getName ()Ljava/lang/String;
	public fun getNumbers ()Ljava/util/Map;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolvedObjects ()Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public fun getRoles ()Ljava/util/Map;
	public fun getRootId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
	public fun getStrings ()Ljava/util/Map;
	public fun getUsers ()Ljava/util/Map;
}

public abstract interface class dev/jombi/kordsb/core/entity/interaction/UserCommandInteraction : dev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction {
	public abstract fun getTarget ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public abstract fun getTarget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract synthetic fun getTargetBehavior ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public abstract fun getTargetId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getTargetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getUsers ()Ljava/util/Map;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
}

public final class dev/jombi/kordsb/core/entity/interaction/UserCommandInteraction$DefaultImpls {
	public static synthetic fun acknowledgeEphemeral (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acknowledgePublic (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static fun deferEphemeralMessage (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponse (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferEphemeralResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicMessage (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponse (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deferPublicResponseUnsafe (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildLocale (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandGuildId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getInvokedCommandName (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ljava/lang/String;
	public static fun getInvokedCommandType (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/ApplicationCommandType;
	public static fun getLocale (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/Locale;
	public static fun getOriginalInteractionResponse (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getOriginalInteractionResponseOrNull (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getResolvedObjects (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/core/entity/interaction/ResolvedObjects;
	public static fun getTarget (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public static fun getTarget (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getTargetBehavior (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public static fun getTargetId (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getTargetOrNull (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getToken (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ljava/lang/String;
	public static fun getType (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ldev/jombi/kordsb/common/entity/InteractionType;
	public static fun getUsers (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)Ljava/util/Map;
	public static fun getVersion (Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;)I
}

public class dev/jombi/kordsb/core/entity/interaction/UserOptionValue : dev/jombi/kordsb/core/entity/interaction/ResolvableOptionValue {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/User;)V
	public fun getFocused ()Z
	public synthetic fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/Entity;
	public fun getResolvedObject ()Ldev/jombi/kordsb/core/entity/User;
	public fun getValue ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/entity/interaction/followup/EphemeralFollowupMessage : dev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage, dev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/EphemeralFollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/followup/EphemeralFollowupMessage;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage;
}

public abstract class dev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage : dev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior {
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage;
}

public final class dev/jombi/kordsb/core/entity/interaction/followup/FollowupMessageKt {
	public static final fun FollowupMessage (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage;
}

public final class dev/jombi/kordsb/core/entity/interaction/followup/PublicFollowupMessage : dev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage, dev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/FollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/followup/PublicFollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/followup/FollowupMessage;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/followup/PublicFollowupMessage;
}

public final class dev/jombi/kordsb/core/entity/interaction/response/EphemeralMessageInteractionResponse : dev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse, dev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/EphemeralMessageInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/response/EphemeralMessageInteractionResponse;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse;
}

public abstract class dev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse : dev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior {
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse;
}

public final class dev/jombi/kordsb/core/entity/interaction/response/PublicMessageInteractionResponse : dev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse, dev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/FollowupPermittingInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/InteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/MessageInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/behavior/interaction/response/PublicMessageInteractionResponseBehavior;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/response/MessageInteractionResponse;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/interaction/response/PublicMessageInteractionResponse;
}

public abstract interface class dev/jombi/kordsb/core/event/Event {
	public abstract fun getCustomContext ()Ljava/lang/Object;
	public abstract fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/Event$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/Event;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/channel/CategoryCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Category;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/CategoryDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Category;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/CategoryUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Category;Ldev/jombi/kordsb/core/entity/channel/Category;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/ChannelCreateEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/ChannelCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/ChannelCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/ChannelCreateEvent;)Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/ChannelDeleteEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/ChannelDeleteEvent;)Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/ChannelPinsUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/channel/ChannelPinsUpdateEvent;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public abstract fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/ChannelUpdateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/ChannelUpdateEvent;)Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/DMChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/DMChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/DMChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Ldev/jombi/kordsb/core/entity/channel/DmChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/NewsChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/NewsChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/NewsChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/NewsChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/NewsChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/NewsChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/NewsChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/NewsChannel;Ldev/jombi/kordsb/core/entity/channel/NewsChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/NewsChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/NewsChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StageChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StageChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StageChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StageChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StageChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StageChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StageChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StageChannel;Ldev/jombi/kordsb/core/entity/channel/StageChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StageChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/StageChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StoreChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StoreChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StoreChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StoreChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/StoreChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/StoreChannel;Ldev/jombi/kordsb/core/entity/channel/StoreChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/StoreChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/TextChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/TextChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/TextChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/TextChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/TextChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/TextChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/TextChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/TextChannel;Ldev/jombi/kordsb/core/entity/channel/TextChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/TextChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/TextChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/TypingStartEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getStarted ()Lkotlinx/datetime/Instant;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/event/channel/UnknownChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Channel;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/UnknownChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Channel;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/UnknownChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Channel;Ldev/jombi/kordsb/core/entity/channel/Channel;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/VoiceChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/VoiceChannelDeleteEvent : dev/jombi/kordsb/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/VoiceChannelUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData {
	public static final field Companion Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordPinsUpdateData;)Ldev/jombi/kordsb/core/event/channel/data/ChannelPinsUpdateEventData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/event/channel/data/TypingStartEventData {
	public static final field Companion Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData$Companion;
	public synthetic fun <init> (ILdev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;)Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/jombi/kordsb/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/optional/OptionalSnowflake;
	public final fun getMember ()Ldev/jombi/kordsb/common/entity/optional/Optional;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/jombi/kordsb/core/event/channel/data/TypingStartEventData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/event/channel/data/TypingStartEventData$Companion {
	public final fun from (Ldev/jombi/kordsb/common/entity/DiscordTyping;)Ldev/jombi/kordsb/core/event/channel/data/TypingStartEventData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/jombi/kordsb/core/event/channel/thread/NewsChannelThreadCreateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/NewsChannelThreadDeleteEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/NewsChannelThreadUpdateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/NewsChannelThread;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/TextChannelThreadCreateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/TextChannelThreadDeleteEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/TextChannelThreadUpdateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/TextChannelThread;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent : dev/jombi/kordsb/core/event/channel/ChannelCreateEvent {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent;)Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;
	public abstract fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public abstract fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent;)Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadListSyncEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ThreadListSyncData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ThreadListSyncData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannelBehaviors ()Ljava/util/List;
	public final fun getChannelIds ()Ljava/util/List;
	public final fun getChannels (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ThreadListSyncData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMembers ()Ljava/util/List;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getThreads ()Ljava/util/List;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadMemberUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadMember;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadMembersUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public final fun getAddedMembers ()Ljava/util/List;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ThreadMembersUpdateEventData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMemberCount ()I
	public final fun getRemovedMemberBehaviors ()Ljava/util/List;
	public final fun getRemovedMemberIds ()Ljava/util/List;
}

public abstract interface class dev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent : dev/jombi/kordsb/core/event/channel/ChannelUpdateEvent {
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
}

public final class dev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getKord (Ldev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent;)Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/channel/thread/UnknownChannelThreadCreateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/UnknownChannelThreadDeleteEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadChannelDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/Object;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/DeletedThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/channel/thread/UnknownChannelThreadUpdateEvent : dev/jombi/kordsb/core/event/channel/thread/ThreadUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;Ljava/lang/Object;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public synthetic fun getOld ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getOld ()Ldev/jombi/kordsb/core/entity/channel/thread/ThreadChannel;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/ConnectEvent : dev/jombi/kordsb/core/event/gateway/GatewayEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract class dev/jombi/kordsb/core/event/gateway/DisconnectEvent : dev/jombi/kordsb/core/event/gateway/GatewayEvent {
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$DetachEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$DiscordCloseEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/gateway/GatewayCloseCode;ZLjava/lang/Object;)V
	public final fun getCloseCode ()Ldev/jombi/kordsb/gateway/GatewayCloseCode;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getRecoverable ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$ReconnectingEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$RetryLimitReachedEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$SessionReset : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$TimeoutEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$UserCloseEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/gateway/DisconnectEvent$ZombieConnectionEvent : dev/jombi/kordsb/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/jombi/kordsb/core/event/gateway/GatewayEvent : dev/jombi/kordsb/core/event/Event {
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/gateway/ReadyEvent : dev/jombi/kordsb/core/event/gateway/GatewayEvent, dev/jombi/kordsb/core/entity/Strategizable {
	public fun <init> (ILjava/util/Set;Ldev/jombi/kordsb/core/entity/User;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (ILjava/util/Set;Ldev/jombi/kordsb/core/entity/User;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getGatewayVersion ()I
	public final fun getGuildIds ()Ljava/util/Set;
	public final fun getGuilds ()Ljava/util/Set;
	public final fun getGuilds (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getSelf ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getSessionId ()Ljava/lang/String;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/gateway/ReadyEvent;
}

public final class dev/jombi/kordsb/core/event/gateway/ResumedEvent : dev/jombi/kordsb/core/event/gateway/GatewayEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/guild/BanAddEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBan (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBanOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/BanAddEvent;
}

public final class dev/jombi/kordsb/core/event/guild/BanRemoveEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/BanRemoveEvent;
}

public final class dev/jombi/kordsb/core/event/guild/EmojisUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getEmojis ()Ljava/util/Set;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ljava/util/Set;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/EmojisUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildCreateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Guild;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/entity/Guild;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/guild/GuildDeleteEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;ZLdev/jombi/kordsb/core/entity/Guild;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/entity/Guild;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getUnavailable ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventCreateEvent : dev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ljava/lang/Object;
	public final fun component4 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventCreateEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventCreateEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventCreateEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getScheduledEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventCreateEvent;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventDeleteEvent : dev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public final fun component2 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component3 ()Ljava/lang/Object;
	public final fun component4 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventDeleteEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventDeleteEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventDeleteEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getScheduledEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventDeleteEvent;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;
}

public abstract interface class dev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public abstract fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getScheduledEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public abstract fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent$DefaultImpls {
	public static fun getChannelId (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getChannelOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGateway (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getGuild (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;)Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getScheduledEventId (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;)Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventUpdateEvent : dev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public final fun component2 ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public final fun component3 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component4 ()Ljava/lang/Object;
	public final fun component5 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUpdateEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUpdateEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUpdateEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOldEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public fun getScheduledEvent ()Ldev/jombi/kordsb/core/entity/GuildScheduledEvent;
	public fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventEvent;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserAddEvent : dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component5 ()Ljava/lang/Object;
	public final fun component6 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserAddEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserAddEvent;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserAddEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserAddEvent;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;
}

public abstract interface class dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public abstract fun getEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public abstract fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent$DefaultImpls {
	public static fun getEvent (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getEventOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGateway (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;)Ldev/jombi/kordsb/gateway/Gateway;
	public static fun getGuild (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMember (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMemberOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getUser (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getUserOrNull (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserRemoveEvent : dev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component2 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component3 ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun component4 ()Ldev/jombi/kordsb/core/Kord;
	public final fun component5 ()Ljava/lang/Object;
	public final fun component6 ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun copy (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserRemoveEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserRemoveEvent;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserRemoveEvent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getEvent (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEventOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getScheduledEventId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserEvent;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/GuildScheduledEventUserRemoveEvent;
}

public final class dev/jombi/kordsb/core/event/guild/GuildUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Guild;Ldev/jombi/kordsb/core/entity/Guild;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/entity/Guild;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Guild;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/guild/IntegrationsUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/IntegrationsUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/InviteCreateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteCreateData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteCreateData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/jombi/kordsb/core/event/guild/InviteCreateEvent;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNUll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/InviteCreateData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final synthetic fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviter ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final synthetic fun getInviter (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final synthetic fun getInviterAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterAsMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getInviterMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getInviterOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getTargetApplication ()Ldev/jombi/kordsb/core/entity/PartialApplication;
	public final fun getTargetMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getTargetType ()Ldev/jombi/kordsb/common/entity/InviteTargetType;
	public final fun getTargetUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getTargetUserAsMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getTargetUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getTargetUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUses ()I
	public final fun isTemporary ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/InviteCreateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/InviteDeleteEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/ChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/InviteDeleteData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final synthetic fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/InviteDeleteEvent;
}

public final class dev/jombi/kordsb/core/event/guild/MemberJoinEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Member;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Member;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/entity/Member;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/MemberJoinEvent;
}

public final class dev/jombi/kordsb/core/event/guild/MemberLeaveEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/core/entity/Member;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Member;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/guild/MemberUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Member;Ldev/jombi/kordsb/core/entity/Member;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Member;Ldev/jombi/kordsb/core/entity/Member;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final synthetic fun getCurrentNickName ()Ljava/lang/String;
	public static fun getCurrentNickName$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public final synthetic fun getCurrentRoleIds ()Ljava/util/Set;
	public static fun getCurrentRoleIds$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public final synthetic fun getCurrentRoles ()Lkotlinx/coroutines/flow/Flow;
	public static fun getCurrentRoles$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/entity/Member;
	public final synthetic fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final synthetic fun getMemberId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public static fun getMemberId$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public final synthetic fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Member;
	public final synthetic fun getPremiumSince ()Lkotlinx/datetime/Instant;
	public static fun getPremiumSince$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final synthetic fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public static fun getUser$delegate (Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/MemberUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/MembersChunkEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/MembersChunkData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/MembersChunkData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChunkCount ()I
	public final fun getChunkIndex ()I
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/MembersChunkData;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInvalidIds ()Ljava/util/Set;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMembers ()Ljava/util/Set;
	public final fun getNonce ()Ljava/lang/String;
	public final fun getPresences ()Ljava/util/List;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/MembersChunkEvent;
}

public final class dev/jombi/kordsb/core/event/guild/VoiceServerUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getEndpoint ()Ljava/lang/String;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getToken ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/VoiceServerUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/guild/WebhookUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/TopGuildMessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/guild/WebhookUpdateEvent;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/InteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
}

public final class dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
}

public final class dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/ApplicationCommandPermissionsUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/ApplicationCommandPermissions;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getPermissions ()Ldev/jombi/kordsb/core/entity/application/ApplicationCommandPermissions;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
}

public final class dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/AutoCompleteInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/DataInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/AutoCompleteInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/AutoCompleteInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ButtonInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ButtonInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ButtonInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/ChatInputCommandCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/ChatInputCommandDeleteEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ChatInputCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ChatInputCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ChatInputCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/ChatInputCommandUpdateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildChatInputCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/DataInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/InteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/DataInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/DataInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalAutoCompleteInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/AutoCompleteInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/entity/interaction/GlobalAutoCompleteInteraction;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalAutoCompleteInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalButtonInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ButtonInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/GlobalComponentInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalButtonInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalButtonInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalChatInputCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ChatInputCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalChatInputCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalChatInputCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/GlobalComponentInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalComponentInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/GlobalComponentInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalMessageCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/MessageCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalMessageCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalMessageCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalModalSubmitInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ModalSubmitInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalModalSubmitInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalModalSubmitInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalSelectMenuInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GlobalComponentInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/SelectMenuInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalSelectMenuInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalComponentInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalSelectMenuInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GlobalUserCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GlobalApplicationCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/UserCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GlobalUserCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GlobalUserCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildAutoCompleteInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/AutoCompleteInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Ldev/jombi/kordsb/core/entity/interaction/GuildAutoCompleteInteraction;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/AutoCompleteInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/DataInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildAutoCompleteInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildButtonInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ButtonInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/GuildComponentInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildButtonInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ButtonInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildButtonInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildChatInputCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ChatInputCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildChatInputCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ChatInputCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildChatInputCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/GuildComponentInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildComponentInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/GuildComponentInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildMessageCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/MessageCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildMessageCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildMessageCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildModalSubmitInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ModalSubmitInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildModalSubmitInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildModalSubmitInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildSelectMenuInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GuildComponentInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/SelectMenuInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildSelectMenuInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ComponentInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildComponentInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildSelectMenuInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/GuildUserCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/GuildApplicationCommandInteractionCreateEvent, dev/jombi/kordsb/core/event/interaction/UserCommandInteractionCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/interaction/GuildUserCommandInteraction;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ActionInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ApplicationCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildApplicationCommandInteraction;
	public fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/GuildUserCommandInteraction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
	public synthetic fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/InteractionCreateEvent : dev/jombi/kordsb/core/event/Event {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/Interaction;
}

public final class dev/jombi/kordsb/core/event/interaction/InteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/InteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/MessageCommandCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/MessageCommandDeleteEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/MessageCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/MessageCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/MessageCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/MessageCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/MessageCommandUpdateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildMessageCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/ModalSubmitInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ActionInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/ModalSubmitInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/ModalSubmitInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/ModalSubmitInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/SelectMenuInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ComponentInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/SelectMenuInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/SelectMenuInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/SelectMenuInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/UnknownApplicationCommandCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/UnknownApplicationCommandDeleteEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/UnknownApplicationCommandUpdateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/UnknownGuildApplicationCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/UserCommandCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandCreateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/interaction/UserCommandDeleteEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandDeleteEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public abstract interface class dev/jombi/kordsb/core/event/interaction/UserCommandInteractionCreateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandInteractionCreateEvent {
	public abstract fun getInteraction ()Ldev/jombi/kordsb/core/entity/interaction/UserCommandInteraction;
}

public final class dev/jombi/kordsb/core/event/interaction/UserCommandInteractionCreateEvent$DefaultImpls {
	public static fun getGateway (Ldev/jombi/kordsb/core/event/interaction/UserCommandInteractionCreateEvent;)Ldev/jombi/kordsb/gateway/Gateway;
}

public final class dev/jombi/kordsb/core/event/interaction/UserCommandUpdateEvent : dev/jombi/kordsb/core/event/interaction/ApplicationCommandUpdateEvent {
	public fun <init> (Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;)V
	public synthetic fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildApplicationCommand;
	public fun getCommand ()Ldev/jombi/kordsb/core/entity/application/GuildUserCommand;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
}

public final class dev/jombi/kordsb/core/event/message/MessageBulkDeleteEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ljava/util/Set;Ljava/util/Set;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ljava/util/Set;Ljava/util/Set;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessageIds ()Ljava/util/Set;
	public final fun getMessages ()Ljava/util/Set;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/MessageBulkDeleteEvent;
}

public final class dev/jombi/kordsb/core/event/message/MessageCreateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Member;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Member;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/entity/Member;
	public final fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/MessageCreateEvent;
}

public final class dev/jombi/kordsb/core/event/message/MessageDeleteEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/MessageDeleteEvent;
}

public final class dev/jombi/kordsb/core/event/message/MessageUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getNew ()Ldev/jombi/kordsb/common/entity/DiscordPartialMessage;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Message;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/MessageUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/message/ReactionAddEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getEmoji ()Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserAsMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getUserAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/ReactionAddEvent;
}

public final class dev/jombi/kordsb/core/event/message/ReactionRemoveAllEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/ReactionRemoveAllEvent;
}

public final class dev/jombi/kordsb/core/event/message/ReactionRemoveEmojiEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getData ()Ldev/jombi/kordsb/core/cache/data/ReactionRemoveEmojiData;
	public final fun getEmoji ()Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/ReactionRemoveAllEvent;
}

public final class dev/jombi/kordsb/core/event/message/ReactionRemoveEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/jombi/kordsb/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCustomContext ()Ljava/lang/Object;
	public final fun getEmoji ()Ldev/jombi/kordsb/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMessage ()Ldev/jombi/kordsb/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserAsMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getUserAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/message/ReactionRemoveEvent;
}

public final class dev/jombi/kordsb/core/event/role/RoleCreateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Role;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Role;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getRole ()Ldev/jombi/kordsb/core/entity/Role;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/role/RoleCreateEvent;
}

public final class dev/jombi/kordsb/core/event/role/RoleDeleteEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Role;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Role;Ldev/jombi/kordsb/core/Kord;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getRole ()Ldev/jombi/kordsb/core/entity/Role;
	public final fun getRoleId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/role/RoleDeleteEvent;
}

public final class dev/jombi/kordsb/core/event/role/RoleUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Role;Ldev/jombi/kordsb/core/entity/Role;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Role;Ldev/jombi/kordsb/core/entity/Role;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Role;
	public final fun getRole ()Ldev/jombi/kordsb/core/entity/Role;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/role/RoleUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/user/PresenceUpdateEvent : dev/jombi/kordsb/core/entity/Strategizable, dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/DiscordPresenceUser;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Presence;Ldev/jombi/kordsb/core/entity/Presence;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/common/entity/DiscordPresenceUser;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/Presence;Ldev/jombi/kordsb/core/entity/Presence;Ljava/lang/Object;Ldev/jombi/kordsb/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun getGuild ()Ldev/jombi/kordsb/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getMember ()Ldev/jombi/kordsb/core/behavior/MemberBehavior;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/Presence;
	public final fun getOldUser ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getPresence ()Ldev/jombi/kordsb/core/entity/Presence;
	public fun getSupplier ()Ldev/jombi/kordsb/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/jombi/kordsb/common/entity/DiscordPresenceUser;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/entity/Strategizable;
	public fun withStrategy (Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;)Ldev/jombi/kordsb/core/event/user/PresenceUpdateEvent;
}

public final class dev/jombi/kordsb/core/event/user/UserUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Ldev/jombi/kordsb/core/entity/User;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/User;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/event/user/VoiceStateUpdateEvent : dev/jombi/kordsb/core/event/Event {
	public fun <init> (Ldev/jombi/kordsb/core/entity/VoiceState;Ldev/jombi/kordsb/core/entity/VoiceState;Ljava/lang/Object;)V
	public fun getCustomContext ()Ljava/lang/Object;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public final fun getOld ()Ldev/jombi/kordsb/core/entity/VoiceState;
	public final fun getState ()Ldev/jombi/kordsb/core/entity/VoiceState;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/exception/EntityNotFoundException : java/lang/Exception {
	public static final field Companion Ldev/jombi/kordsb/core/exception/EntityNotFoundException$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class dev/jombi/kordsb/core/exception/EntityNotFoundException$Companion {
	public final fun applicationCommandPermissionsNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun banNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun emojiNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun entityNotFound (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun followupMessageNotFound (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun guildEntityNotFound (Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun guildNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun guildScheduledEventNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun interactionNotFound (Ljava/lang/String;)Ljava/lang/Void;
	public final fun inviteNotFound (Ljava/lang/String;)Ljava/lang/Void;
	public final fun memberNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun messageNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun roleNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun selfNotFound ()Ljava/lang/Void;
	public final fun stageInstanceNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun stickerNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun templateNotFound (Ljava/lang/String;)Ljava/lang/Void;
	public final fun userNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun webhookMessageNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public static synthetic fun webhookMessageNotFound$default (Ldev/jombi/kordsb/core/exception/EntityNotFoundException$Companion;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;ILjava/lang/Object;)Ljava/lang/Void;
	public final fun webhookNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun welcomeScreenNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun widgetNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
}

public final class dev/jombi/kordsb/core/exception/GatewayNotFoundException : java/lang/Exception {
	public static final field Companion Ldev/jombi/kordsb/core/exception/GatewayNotFoundException$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class dev/jombi/kordsb/core/exception/GatewayNotFoundException$Companion {
	public final fun voiceConnectionGatewayNotFound (Ldev/jombi/kordsb/common/entity/Snowflake;)Ljava/lang/Void;
}

public final class dev/jombi/kordsb/core/exception/KordInitializationException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class dev/jombi/kordsb/core/gateway/DefaultMasterGateway : dev/jombi/kordsb/core/gateway/MasterGateway {
	public fun <init> (Ldev/jombi/kordsb/gateway/Gateway;)V
	public fun getAveragePing-FghU774 ()Lkotlin/time/Duration;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun startWithConfig (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/gateway/MasterGateway {
	public abstract fun getAveragePing-FghU774 ()Lkotlin/time/Duration;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public abstract fun startWithConfig (Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/gateway/MasterGateway$DefaultImpls {
	public static fun startWithConfig (Ldev/jombi/kordsb/core/gateway/MasterGateway;Ldev/jombi/kordsb/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/gateway/MasterGatewayKt {
	public static final fun start (Ldev/jombi/kordsb/core/gateway/MasterGateway;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun start$default (Ldev/jombi/kordsb/core/gateway/MasterGateway;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/gateway/ShardEvent {
	public fun <init> (Ldev/jombi/kordsb/gateway/Event;Ldev/jombi/kordsb/gateway/Gateway;)V
	public final fun component1 ()Ldev/jombi/kordsb/gateway/Event;
	public final fun component2 ()Ldev/jombi/kordsb/gateway/Gateway;
	public final fun copy (Ldev/jombi/kordsb/gateway/Event;Ldev/jombi/kordsb/gateway/Gateway;)Ldev/jombi/kordsb/core/gateway/ShardEvent;
	public static synthetic fun copy$default (Ldev/jombi/kordsb/core/gateway/ShardEvent;Ldev/jombi/kordsb/gateway/Event;Ldev/jombi/kordsb/gateway/Gateway;ILjava/lang/Object;)Ldev/jombi/kordsb/core/gateway/ShardEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEvent ()Ldev/jombi/kordsb/gateway/Event;
	public final fun getGateway ()Ldev/jombi/kordsb/gateway/Gateway;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/gateway/handler/DefaultGatewayEventInterceptor : dev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function3;)V
	public fun handle (Ldev/jombi/kordsb/core/gateway/ShardEvent;Ldev/jombi/kordsb/core/Kord;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor {
	public static final field Companion Ldev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor$Companion;
	public abstract fun handle (Ldev/jombi/kordsb/core/gateway/ShardEvent;Ldev/jombi/kordsb/core/Kord;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor$Companion {
	public final fun none ()Ldev/jombi/kordsb/core/gateway/handler/GatewayEventInterceptor;
}

public abstract class dev/jombi/kordsb/core/live/AbstractLiveKordEntity : dev/jombi/kordsb/core/live/LiveKordEntity, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/Kord;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/jombi/kordsb/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	protected abstract fun filter (Ldev/jombi/kordsb/core/event/Event;)Z
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public synthetic fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public final fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun shutDown (Ljava/util/concurrent/CancellationException;)V
	protected abstract fun update (Ldev/jombi/kordsb/core/event/Event;)V
}

public final class dev/jombi/kordsb/core/live/LiveGuild : dev/jombi/kordsb/core/live/AbstractLiveKordEntity, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGuild ()Ldev/jombi/kordsb/core/entity/Guild;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/LiveGuildKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/LiveGuild;
	public static final fun live (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/LiveGuild;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveGuild;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Guild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveGuild;
	public static final fun onBanAdd (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onBanAdd$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onBanRemove (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onBanRemove$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onChannelCreate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelCreate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onChannelDelete (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelDelete$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onChannelUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onEmojisUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onEmojisUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onGuildCreate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildCreate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onGuildUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onIntegrationsUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onIntegrationsUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMemberJoin (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMemberJoin$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMemberLeave (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMemberLeave$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMemberUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMemberUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageCreate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageCreate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageDelete (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageDelete$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onPresenceUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onPresenceUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/LiveGuild;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/LiveGuild;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/LiveGuild;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/LiveGuild;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemoveAll$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onRoleCreate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onRoleCreate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onRoleDelete (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onRoleDelete$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onRoleUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onRoleUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceServerUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onVoiceServerUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceStateUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onVoiceStateUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onWebhookUpdate (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onWebhookUpdate$default (Ldev/jombi/kordsb/core/live/LiveGuild;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public abstract interface class dev/jombi/kordsb/core/live/LiveKordEntity : dev/jombi/kordsb/core/entity/KordEntity, kotlinx/coroutines/CoroutineScope {
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun shutDown (Ljava/util/concurrent/CancellationException;)V
}

public final class dev/jombi/kordsb/core/live/LiveKordEntity$DefaultImpls {
	public static fun compareTo (Ldev/jombi/kordsb/core/live/LiveKordEntity;Ldev/jombi/kordsb/core/entity/Entity;)I
	public static synthetic fun shutDown$default (Ldev/jombi/kordsb/core/live/LiveKordEntity;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V
}

public final class dev/jombi/kordsb/core/live/LiveMember : dev/jombi/kordsb/core/live/AbstractLiveKordEntity, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMember ()Ldev/jombi/kordsb/core/entity/Member;
}

public final class dev/jombi/kordsb/core/live/LiveMemberKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/LiveMember;
	public static final fun live (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/LiveMember;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveMember;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Member;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveMember;
	public static final synthetic fun onBanAdd (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onBanAdd$default (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onLeave (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onLeave$default (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutdown (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutdown$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/LiveMember;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/LiveMessage : dev/jombi/kordsb/core/live/AbstractLiveKordEntity, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Message;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGuildId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getMessage ()Ldev/jombi/kordsb/core/entity/Message;
}

public final class dev/jombi/kordsb/core/live/LiveMessageKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/Message;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun live (Ldev/jombi/kordsb/core/entity/Message;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Message;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Message;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final synthetic fun onBulkDelete (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onBulkDelete$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onChannelDelete (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelDelete$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onOnlyDelete (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onOnlyDelete$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/LiveMessage;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/LiveMessage;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/LiveMessage;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/LiveMessage;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemoveAll$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutdown (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutdown$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/LiveMessage;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/LiveRole : dev/jombi/kordsb/core/live/AbstractLiveKordEntity, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getRole ()Ldev/jombi/kordsb/core/entity/Role;
}

public final class dev/jombi/kordsb/core/live/LiveRoleKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/LiveRole;
	public static final fun live (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/LiveRole;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveRole;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/Role;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveRole;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutdown (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutdown$default (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/LiveRole;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/LiveUser : dev/jombi/kordsb/core/live/AbstractLiveKordEntity, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
	public final fun getUser ()Ldev/jombi/kordsb/core/entity/User;
}

public final class dev/jombi/kordsb/core/live/LiveUserKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/LiveUser;
	public static final fun live (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/LiveUser;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveUser;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/User;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/LiveUser;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/LiveUser;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/LiveUser;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/channel/LiveCategory : dev/jombi/kordsb/core/live/channel/LiveChannel, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/channel/LiveCategoryKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveCategory;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveCategory;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveCategory;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/Category;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveCategory;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutDown (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutDown$default (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveCategory;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public abstract class dev/jombi/kordsb/core/live/channel/LiveChannel : dev/jombi/kordsb/core/live/AbstractLiveKordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/Kord;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected fun filter (Ldev/jombi/kordsb/core/event/Event;)Z
	public abstract fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
}

public final class dev/jombi/kordsb/core/live/channel/LiveChannelKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveChannel;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/Channel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveChannel;
	public static final synthetic fun onChannelCreate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onChannelDelete (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onChannelUpdate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildCreate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onGuildUpdate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageCreate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageDelete (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onMessageUpdate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onMessageUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionAdd$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Ldev/jombi/kordsb/core/entity/ReactionEmoji;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemove$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onReactionRemoveAll$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceStateUpdate (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onVoiceStateUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/channel/LiveDmChannel : dev/jombi/kordsb/core/live/channel/LiveChannel, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/DmChannel;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/channel/LiveDmChannelKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/DmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutDown (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutDown$default (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveDmChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/channel/LiveGuildChannel : dev/jombi/kordsb/core/live/channel/LiveChannel, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/channel/LiveGuildChannelKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/TopGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutDown (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutDown$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel : dev/jombi/kordsb/core/live/channel/LiveChannel, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/channel/LiveGuildMessageChannelKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/TopGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;
	public static final synthetic fun onChannelDelete (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onChannelDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutDown (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutDown$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveGuildMessageChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/channel/LiveVoiceChannel : dev/jombi/kordsb/core/live/channel/LiveChannel, dev/jombi/kordsb/core/entity/KordEntity {
	public fun <init> (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/Channel;
	public fun getChannel ()Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;
	public fun getId ()Ldev/jombi/kordsb/common/entity/Snowflake;
}

public final class dev/jombi/kordsb/core/live/channel/LiveVoiceChannelKt {
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;)Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;
	public static final fun live (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;
	public static synthetic fun live$default (Ldev/jombi/kordsb/core/entity/channel/VoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;
	public static final synthetic fun onCreate (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onCreate$default (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onDelete (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onGuildDelete (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onGuildDelete$default (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final synthetic fun onShutDown (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onShutDown$default (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun onUpdate$default (Ldev/jombi/kordsb/core/live/channel/LiveVoiceChannel;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public final class dev/jombi/kordsb/core/live/exception/LiveCancellationException : java/util/concurrent/CancellationException {
	public fun <init> (Ldev/jombi/kordsb/core/event/Event;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/event/Event;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEvent ()Ldev/jombi/kordsb/core/event/Event;
}

public final class dev/jombi/kordsb/core/supplier/CacheEntitySupplier : dev/jombi/kordsb/core/supplier/EntitySupplier {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;)V
	public fun getActiveThreads (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationCommandPermissionsOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelPins (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannelWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public final fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentUserGuilds (Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojiOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuild (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildBan (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBans (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildChannels (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreview (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreviewOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildRoles (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventUsers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvents (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildVoiceRegions (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWidget (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidgetOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getNitroStickerPacks ()Lkotlinx/coroutines/flow/Flow;
	public fun getPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getPublicArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstance (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getThreadMembers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUsers ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhook (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithToken (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithTokenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/jombi/kordsb/core/supplier/EntitySupplier {
	public abstract fun getActiveThreads (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getApplicationCommandPermissionsOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelPins (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getChannelWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getCurrentUserGuilds (Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEmojiOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEmojis (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGlobalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGlobalApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGlobalApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuild (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildBan (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildBans (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildChannels (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildPreview (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildPreviewOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildRoles (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildScheduledEventMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEventMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEventMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildScheduledEventUsers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEventUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEventUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildScheduledEvents (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildStickers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildVoiceRegions (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildWidget (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildWidgetOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getNitroStickerPacks ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPublicArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstance (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstanceOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplates (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getThreadMembers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getUserOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhook (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookWithToken (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookWithTokenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/jombi/kordsb/core/supplier/EntitySupplier$DefaultImpls {
	public static fun getApplicationCommandPermissions (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getCurrentUserGuilds$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getEmoji (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getFollowupMessage (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGlobalApplicationCommand (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGlobalApplicationCommands$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildApplicationCommand (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildApplicationCommands$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildBan (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildBans$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildMembers$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildPreview (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildScheduledEvent (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildScheduledEventMembers (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventMembers$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventMembersAfter$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventMembersBefore$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildScheduledEventUsers (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventUsers$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventUsersAfter$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getGuildScheduledEventUsersBefore$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildSticker (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildWidget (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getJoinedPrivateArchivedThreads$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMember (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessage (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getMessagesAfter$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAround$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesBefore$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getPrivateArchivedThreads$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getPublicArchivedThreads$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRole (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getSelf (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstance (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getSticker (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplate (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getUser (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhook (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhookMessage (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookMessage$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun getWebhookMessageOrNull$default (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getWebhookWithToken (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/jombi/kordsb/core/supplier/EntitySupplyStrategy {
	public static final field Companion Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy$Companion;
	public abstract fun supply (Ldev/jombi/kordsb/core/Kord;)Ldev/jombi/kordsb/core/supplier/EntitySupplier;
}

public final class dev/jombi/kordsb/core/supplier/EntitySupplyStrategy$Companion {
	public final fun getCache ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getCacheWithCachingRestFallback ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getCacheWithRestFallback ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getCachingRest ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun getRest ()Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Ldev/jombi/kordsb/core/supplier/EntitySupplyStrategy;
}

public final class dev/jombi/kordsb/core/supplier/FallbackEntitySupplierKt {
	public static final fun withFallback (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/jombi/kordsb/core/supplier/EntitySupplier;)Ldev/jombi/kordsb/core/supplier/EntitySupplier;
}

public final class dev/jombi/kordsb/core/supplier/RestEntitySupplier : dev/jombi/kordsb/core/supplier/EntitySupplier {
	public fun <init> (Ldev/jombi/kordsb/core/Kord;)V
	public fun getActiveThreads (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationCommandPermissionsOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getApplicationInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAuditLogEntries (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/json/request/AuditLogGetRequest;)Lkotlinx/coroutines/flow/Flow;
	public final fun getAuditLogEntries (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getAuditLogEntries$default (Ldev/jombi/kordsb/core/supplier/RestEntitySupplier;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/rest/json/request/AuditLogGetRequest;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelPins (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannelWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentUserGuilds (Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojiOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuild (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildBan (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBans (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildChannels (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreview (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreviewOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildRoles (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventUsers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvents (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildVoiceRegions (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public final fun getGuildWelcomeScreen (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildWelcomeScreenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidget (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidgetOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public final fun getInvite (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInvite$default (Ldev/jombi/kordsb/core/supplier/RestEntitySupplier;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getInviteOrNull (Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInviteOrNull$default (Ldev/jombi/kordsb/core/supplier/RestEntitySupplier;Ljava/lang/String;ZZLdev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public final fun getKord ()Ldev/jombi/kordsb/core/Kord;
	public fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getNitroStickerPacks ()Lkotlinx/coroutines/flow/Flow;
	public final fun getOriginalInteraction (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOriginalInteractionOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getPublicArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public final fun getReactors (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstance (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getThreadMembers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhook (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithToken (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithTokenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/jombi/kordsb/core/supplier/StoreEntitySupplier : dev/jombi/kordsb/core/supplier/EntitySupplier {
	public fun <init> (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/kord/cache/api/DataCache;)V
	public synthetic fun <init> (Ldev/jombi/kordsb/core/supplier/EntitySupplier;Ldev/kord/cache/api/DataCache;Ldev/jombi/kordsb/core/Kord;)V
	public fun getActiveThreads (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationCommandPermissionsOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannel (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelPins (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannelWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentUserGuilds (Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getEmoji (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojiOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getFollowupMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFollowupMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGlobalApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuild (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommand (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildApplicationCommandPermissions (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildApplicationCommands (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Boolean;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildBan (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBanOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBans (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildChannels (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreview (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreviewOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildRoles (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvent (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventMembers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventMembersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildScheduledEventUsers (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEventUsersBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildScheduledEvents (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildStickers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildVoiceRegions (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWebhooks (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWidget (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidgetOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public fun getJoinedPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMember (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessagesAfter (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getNitroStickerPacks ()Lkotlinx/coroutines/flow/Flow;
	public fun getPrivateArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getPublicArchivedThreads (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ljava/lang/Integer;)Lkotlinx/coroutines/flow/Flow;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstance (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSticker (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStickerOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getThreadMembers (Ldev/jombi/kordsb/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getUser (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhook (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessage (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookMessageOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Ldev/jombi/kordsb/common/entity/Snowflake;Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithToken (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithTokenOrNull (Ldev/jombi/kordsb/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

